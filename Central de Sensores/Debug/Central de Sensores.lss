
Central de Sensores.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017c  00800100  00001b76  00001c0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b76  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021c  0080027c  0080027c  00001d86  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001de4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  00001e24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002987  00000000  00000000  00001f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a40  00000000  00000000  00004913  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001361  00000000  00000000  00005353  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000460  00000000  00000000  000066b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000069f  00000000  00000000  00006b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e7f  00000000  00000000  000071b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00009032  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 e7       	ldi	r30, 0x76	; 118
      7c:	fb e1       	ldi	r31, 0x1B	; 27
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 37       	cpi	r26, 0x7C	; 124
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	24 e0       	ldi	r18, 0x04	; 4
      8c:	ac e7       	ldi	r26, 0x7C	; 124
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a8 39       	cpi	r26, 0x98	; 152
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 1b 08 	call	0x1036	; 0x1036 <main>
      9e:	0c 94 b9 0d 	jmp	0x1b72	; 0x1b72 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2cInit>:
*************************************************************************/
unsigned char i2cRepStart(unsigned char address)
{
    return i2cStart( address );

}/* i2cRepStart */
      a6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
      aa:	88 e4       	ldi	r24, 0x48	; 72
      ac:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
      b0:	88 e1       	ldi	r24, 0x18	; 24
      b2:	91 e0       	ldi	r25, 0x01	; 1
      b4:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <serialString>
      b8:	08 95       	ret

000000ba <i2cStart>:
      ba:	94 ea       	ldi	r25, 0xA4	; 164
      bc:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
      c0:	ec eb       	ldi	r30, 0xBC	; 188
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	90 81       	ld	r25, Z
      c6:	99 23       	and	r25, r25
      c8:	ec f7       	brge	.-6      	; 0xc4 <i2cStart+0xa>
      ca:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
      ce:	98 7f       	andi	r25, 0xF8	; 248
      d0:	98 30       	cpi	r25, 0x08	; 8
      d2:	11 f0       	breq	.+4      	; 0xd8 <i2cStart+0x1e>
      d4:	90 31       	cpi	r25, 0x10	; 16
      d6:	a1 f4       	brne	.+40     	; 0x100 <i2cStart+0x46>
      d8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
      dc:	84 e8       	ldi	r24, 0x84	; 132
      de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
      e2:	ec eb       	ldi	r30, 0xBC	; 188
      e4:	f0 e0       	ldi	r31, 0x00	; 0
      e6:	80 81       	ld	r24, Z
      e8:	88 23       	and	r24, r24
      ea:	ec f7       	brge	.-6      	; 0xe6 <i2cStart+0x2c>
      ec:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
      f0:	98 7f       	andi	r25, 0xF8	; 248
      f2:	98 31       	cpi	r25, 0x18	; 24
      f4:	39 f0       	breq	.+14     	; 0x104 <i2cStart+0x4a>
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	90 34       	cpi	r25, 0x40	; 64
      fa:	29 f4       	brne	.+10     	; 0x106 <i2cStart+0x4c>
      fc:	80 e0       	ldi	r24, 0x00	; 0
      fe:	08 95       	ret
     100:	81 e0       	ldi	r24, 0x01	; 1
     102:	08 95       	ret
     104:	80 e0       	ldi	r24, 0x00	; 0
     106:	08 95       	ret

00000108 <i2cStop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2cStop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     108:	84 e9       	ldi	r24, 0x94	; 148
     10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     10e:	ec eb       	ldi	r30, 0xBC	; 188
     110:	f0 e0       	ldi	r31, 0x00	; 0
     112:	80 81       	ld	r24, Z
     114:	84 fd       	sbrc	r24, 4
     116:	fd cf       	rjmp	.-6      	; 0x112 <i2cStop+0xa>

}/* i2cStop */
     118:	08 95       	ret

0000011a <i2cWrite>:
unsigned char i2cWrite( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     11a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     11e:	84 e8       	ldi	r24, 0x84	; 132
     120:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     124:	ec eb       	ldi	r30, 0xBC	; 188
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	80 81       	ld	r24, Z
     12a:	88 23       	and	r24, r24
     12c:	ec f7       	brge	.-6      	; 0x128 <i2cWrite+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     12e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     132:	98 7f       	andi	r25, 0xF8	; 248
     134:	81 e0       	ldi	r24, 0x01	; 1
     136:	98 32       	cpi	r25, 0x28	; 40
     138:	09 f4       	brne	.+2      	; 0x13c <i2cWrite+0x22>
     13a:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2cWrite */
     13c:	08 95       	ret

0000013e <i2cReadAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2cReadAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     13e:	84 ec       	ldi	r24, 0xC4	; 196
     140:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));    
     144:	ec eb       	ldi	r30, 0xBC	; 188
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	80 81       	ld	r24, Z
     14a:	88 23       	and	r24, r24
     14c:	ec f7       	brge	.-6      	; 0x148 <i2cReadAck+0xa>

    return TWDR;
     14e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2cReadAck */
     152:	08 95       	ret

00000154 <i2cReadNack>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2cReadNack(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     154:	84 e8       	ldi	r24, 0x84	; 132
     156:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
     15a:	ec eb       	ldi	r30, 0xBC	; 188
     15c:	f0 e0       	ldi	r31, 0x00	; 0
     15e:	80 81       	ld	r24, Z
     160:	88 23       	and	r24, r24
     162:	ec f7       	brge	.-6      	; 0x15e <i2cReadNack+0xa>
	
    return TWDR;
     164:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2cReadNack */
     168:	08 95       	ret

0000016a <serialStart>:

// Estimates the Absolute Altitude in meters, based on the pressure value
float readAbsAltitude(void) {
	float p = readPressure();
	return (44330 * (1.0 - pow((p/101325), 0.1903)));
}
     16a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     16e:	87 e6       	ldi	r24, 0x67	; 103
     170:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     174:	e1 ec       	ldi	r30, 0xC1	; 193
     176:	f0 e0       	ldi	r31, 0x00	; 0
     178:	80 81       	ld	r24, Z
     17a:	80 68       	ori	r24, 0x80	; 128
     17c:	80 83       	st	Z, r24
     17e:	80 81       	ld	r24, Z
     180:	88 61       	ori	r24, 0x18	; 24
     182:	80 83       	st	Z, r24
     184:	e2 ec       	ldi	r30, 0xC2	; 194
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	80 81       	ld	r24, Z
     18a:	86 60       	ori	r24, 0x06	; 6
     18c:	80 83       	st	Z, r24
     18e:	08 95       	ret

00000190 <serialSend>:
     190:	e0 ec       	ldi	r30, 0xC0	; 192
     192:	f0 e0       	ldi	r31, 0x00	; 0
     194:	90 81       	ld	r25, Z
     196:	95 ff       	sbrs	r25, 5
     198:	fd cf       	rjmp	.-6      	; 0x194 <serialSend+0x4>
     19a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     19e:	08 95       	ret

000001a0 <serialString>:
     1a0:	0f 93       	push	r16
     1a2:	1f 93       	push	r17
     1a4:	cf 93       	push	r28
     1a6:	fc 01       	movw	r30, r24
     1a8:	80 81       	ld	r24, Z
     1aa:	88 23       	and	r24, r24
     1ac:	59 f0       	breq	.+22     	; 0x1c4 <serialString+0x24>
     1ae:	8f 01       	movw	r16, r30
     1b0:	c0 e0       	ldi	r28, 0x00	; 0
     1b2:	0e 94 c8 00 	call	0x190	; 0x190 <serialSend>
     1b6:	cf 5f       	subi	r28, 0xFF	; 255
     1b8:	f8 01       	movw	r30, r16
     1ba:	ec 0f       	add	r30, r28
     1bc:	f1 1d       	adc	r31, r1
     1be:	80 81       	ld	r24, Z
     1c0:	81 11       	cpse	r24, r1
     1c2:	f7 cf       	rjmp	.-18     	; 0x1b2 <serialString+0x12>
     1c4:	cf 91       	pop	r28
     1c6:	1f 91       	pop	r17
     1c8:	0f 91       	pop	r16
     1ca:	08 95       	ret

000001cc <serialStringLN>:
     1cc:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <serialString>
     1d0:	8d e0       	ldi	r24, 0x0D	; 13
     1d2:	0e 94 c8 00 	call	0x190	; 0x190 <serialSend>
     1d6:	8a e0       	ldi	r24, 0x0A	; 10
     1d8:	0e 94 c8 00 	call	0x190	; 0x190 <serialSend>
     1dc:	08 95       	ret

000001de <serialSendInt>:
     1de:	1f 93       	push	r17
     1e0:	cf 93       	push	r28
     1e2:	df 93       	push	r29
     1e4:	cd b7       	in	r28, 0x3d	; 61
     1e6:	de b7       	in	r29, 0x3e	; 62
     1e8:	2a 97       	sbiw	r28, 0x0a	; 10
     1ea:	0f b6       	in	r0, 0x3f	; 63
     1ec:	f8 94       	cli
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	0f be       	out	0x3f, r0	; 63
     1f2:	cd bf       	out	0x3d, r28	; 61
     1f4:	12 2f       	mov	r17, r18
     1f6:	4a 30       	cpi	r20, 0x0A	; 10
     1f8:	29 f0       	breq	.+10     	; 0x204 <serialSendInt+0x26>
     1fa:	40 31       	cpi	r20, 0x10	; 16
     1fc:	59 f1       	breq	.+86     	; 0x254 <serialSendInt+0x76>
     1fe:	48 30       	cpi	r20, 0x08	; 8
     200:	e1 f5       	brne	.+120    	; 0x27a <serialSendInt+0x9c>
     202:	14 c0       	rjmp	.+40     	; 0x22c <serialSendInt+0x4e>
     204:	9f 93       	push	r25
     206:	8f 93       	push	r24
     208:	7f 93       	push	r23
     20a:	6f 93       	push	r22
     20c:	8a e2       	ldi	r24, 0x2A	; 42
     20e:	91 e0       	ldi	r25, 0x01	; 1
     210:	9f 93       	push	r25
     212:	8f 93       	push	r24
     214:	ce 01       	movw	r24, r28
     216:	01 96       	adiw	r24, 0x01	; 1
     218:	9f 93       	push	r25
     21a:	8f 93       	push	r24
     21c:	0e 94 cf 0a 	call	0x159e	; 0x159e <sprintf>
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	f8 94       	cli
     224:	de bf       	out	0x3e, r29	; 62
     226:	0f be       	out	0x3f, r0	; 63
     228:	cd bf       	out	0x3d, r28	; 61
     22a:	27 c0       	rjmp	.+78     	; 0x27a <serialSendInt+0x9c>
     22c:	9f 93       	push	r25
     22e:	8f 93       	push	r24
     230:	7f 93       	push	r23
     232:	6f 93       	push	r22
     234:	8e e2       	ldi	r24, 0x2E	; 46
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	9f 93       	push	r25
     23a:	8f 93       	push	r24
     23c:	ce 01       	movw	r24, r28
     23e:	01 96       	adiw	r24, 0x01	; 1
     240:	9f 93       	push	r25
     242:	8f 93       	push	r24
     244:	0e 94 cf 0a 	call	0x159e	; 0x159e <sprintf>
     248:	0f b6       	in	r0, 0x3f	; 63
     24a:	f8 94       	cli
     24c:	de bf       	out	0x3e, r29	; 62
     24e:	0f be       	out	0x3f, r0	; 63
     250:	cd bf       	out	0x3d, r28	; 61
     252:	13 c0       	rjmp	.+38     	; 0x27a <serialSendInt+0x9c>
     254:	9f 93       	push	r25
     256:	8f 93       	push	r24
     258:	7f 93       	push	r23
     25a:	6f 93       	push	r22
     25c:	84 e3       	ldi	r24, 0x34	; 52
     25e:	91 e0       	ldi	r25, 0x01	; 1
     260:	9f 93       	push	r25
     262:	8f 93       	push	r24
     264:	ce 01       	movw	r24, r28
     266:	01 96       	adiw	r24, 0x01	; 1
     268:	9f 93       	push	r25
     26a:	8f 93       	push	r24
     26c:	0e 94 cf 0a 	call	0x159e	; 0x159e <sprintf>
     270:	0f b6       	in	r0, 0x3f	; 63
     272:	f8 94       	cli
     274:	de bf       	out	0x3e, r29	; 62
     276:	0f be       	out	0x3f, r0	; 63
     278:	cd bf       	out	0x3d, r28	; 61
     27a:	11 23       	and	r17, r17
     27c:	29 f0       	breq	.+10     	; 0x288 <serialSendInt+0xaa>
     27e:	ce 01       	movw	r24, r28
     280:	01 96       	adiw	r24, 0x01	; 1
     282:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
     286:	04 c0       	rjmp	.+8      	; 0x290 <serialSendInt+0xb2>
     288:	ce 01       	movw	r24, r28
     28a:	01 96       	adiw	r24, 0x01	; 1
     28c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <serialString>
     290:	2a 96       	adiw	r28, 0x0a	; 10
     292:	0f b6       	in	r0, 0x3f	; 63
     294:	f8 94       	cli
     296:	de bf       	out	0x3e, r29	; 62
     298:	0f be       	out	0x3f, r0	; 63
     29a:	cd bf       	out	0x3d, r28	; 61
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	1f 91       	pop	r17
     2a2:	08 95       	ret

000002a4 <wiz5200Write>:
     2a4:	2a 98       	cbi	0x05, 2	; 5
     2a6:	9e bd       	out	0x2e, r25	; 46
     2a8:	0d b4       	in	r0, 0x2d	; 45
     2aa:	07 fe       	sbrs	r0, 7
     2ac:	fd cf       	rjmp	.-6      	; 0x2a8 <wiz5200Write+0x4>
     2ae:	9e b5       	in	r25, 0x2e	; 46
     2b0:	8e bd       	out	0x2e, r24	; 46
     2b2:	0d b4       	in	r0, 0x2d	; 45
     2b4:	07 fe       	sbrs	r0, 7
     2b6:	fd cf       	rjmp	.-6      	; 0x2b2 <wiz5200Write+0xe>
     2b8:	8e b5       	in	r24, 0x2e	; 46
     2ba:	80 e8       	ldi	r24, 0x80	; 128
     2bc:	8e bd       	out	0x2e, r24	; 46
     2be:	0d b4       	in	r0, 0x2d	; 45
     2c0:	07 fe       	sbrs	r0, 7
     2c2:	fd cf       	rjmp	.-6      	; 0x2be <wiz5200Write+0x1a>
     2c4:	8e b5       	in	r24, 0x2e	; 46
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	8e bd       	out	0x2e, r24	; 46
     2ca:	0d b4       	in	r0, 0x2d	; 45
     2cc:	07 fe       	sbrs	r0, 7
     2ce:	fd cf       	rjmp	.-6      	; 0x2ca <wiz5200Write+0x26>
     2d0:	8e b5       	in	r24, 0x2e	; 46
     2d2:	6e bd       	out	0x2e, r22	; 46
     2d4:	0d b4       	in	r0, 0x2d	; 45
     2d6:	07 fe       	sbrs	r0, 7
     2d8:	fd cf       	rjmp	.-6      	; 0x2d4 <wiz5200Write+0x30>
     2da:	8e b5       	in	r24, 0x2e	; 46
     2dc:	2a 9a       	sbi	0x05, 2	; 5
     2de:	08 95       	ret

000002e0 <wiz5200Read>:
     2e0:	2a 98       	cbi	0x05, 2	; 5
     2e2:	9e bd       	out	0x2e, r25	; 46
     2e4:	0d b4       	in	r0, 0x2d	; 45
     2e6:	07 fe       	sbrs	r0, 7
     2e8:	fd cf       	rjmp	.-6      	; 0x2e4 <wiz5200Read+0x4>
     2ea:	9e b5       	in	r25, 0x2e	; 46
     2ec:	8e bd       	out	0x2e, r24	; 46
     2ee:	0d b4       	in	r0, 0x2d	; 45
     2f0:	07 fe       	sbrs	r0, 7
     2f2:	fd cf       	rjmp	.-6      	; 0x2ee <wiz5200Read+0xe>
     2f4:	8e b5       	in	r24, 0x2e	; 46
     2f6:	1e bc       	out	0x2e, r1	; 46
     2f8:	0d b4       	in	r0, 0x2d	; 45
     2fa:	07 fe       	sbrs	r0, 7
     2fc:	fd cf       	rjmp	.-6      	; 0x2f8 <wiz5200Read+0x18>
     2fe:	8e b5       	in	r24, 0x2e	; 46
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	8e bd       	out	0x2e, r24	; 46
     304:	0d b4       	in	r0, 0x2d	; 45
     306:	07 fe       	sbrs	r0, 7
     308:	fd cf       	rjmp	.-6      	; 0x304 <wiz5200Read+0x24>
     30a:	8e b5       	in	r24, 0x2e	; 46
     30c:	8f ef       	ldi	r24, 0xFF	; 255
     30e:	8e bd       	out	0x2e, r24	; 46
     310:	0d b4       	in	r0, 0x2d	; 45
     312:	07 fe       	sbrs	r0, 7
     314:	fd cf       	rjmp	.-6      	; 0x310 <wiz5200Read+0x30>
     316:	8e b5       	in	r24, 0x2e	; 46
     318:	2a 9a       	sbi	0x05, 2	; 5
     31a:	08 95       	ret

0000031c <wiz5200Init>:
     31c:	af 92       	push	r10
     31e:	bf 92       	push	r11
     320:	cf 92       	push	r12
     322:	df 92       	push	r13
     324:	ef 92       	push	r14
     326:	ff 92       	push	r15
     328:	0f 93       	push	r16
     32a:	1f 93       	push	r17
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
     330:	c8 2e       	mov	r12, r24
     332:	d9 2e       	mov	r13, r25
     334:	d6 2f       	mov	r29, r22
     336:	c7 2f       	mov	r28, r23
     338:	a4 2e       	mov	r10, r20
     33a:	b5 2e       	mov	r11, r21
     33c:	e2 2e       	mov	r14, r18
     33e:	f3 2e       	mov	r15, r19
     340:	60 e8       	ldi	r22, 0x80	; 128
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     34a:	0d 2f       	mov	r16, r29
     34c:	1c 2f       	mov	r17, r28
     34e:	c9 e0       	ldi	r28, 0x09	; 9
     350:	d0 e0       	ldi	r29, 0x00	; 0
     352:	f8 01       	movw	r30, r16
     354:	61 91       	ld	r22, Z+
     356:	8f 01       	movw	r16, r30
     358:	ce 01       	movw	r24, r28
     35a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     35e:	21 96       	adiw	r28, 0x01	; 1
     360:	cf 30       	cpi	r28, 0x0F	; 15
     362:	d1 05       	cpc	r29, r1
     364:	b1 f7       	brne	.-20     	; 0x352 <wiz5200Init+0x36>
     366:	0c 2d       	mov	r16, r12
     368:	1d 2d       	mov	r17, r13
     36a:	f8 01       	movw	r30, r16
     36c:	61 91       	ld	r22, Z+
     36e:	8f 01       	movw	r16, r30
     370:	ce 01       	movw	r24, r28
     372:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     376:	21 96       	adiw	r28, 0x01	; 1
     378:	c3 31       	cpi	r28, 0x13	; 19
     37a:	d1 05       	cpc	r29, r1
     37c:	b1 f7       	brne	.-20     	; 0x36a <wiz5200Init+0x4e>
     37e:	0a 2d       	mov	r16, r10
     380:	1b 2d       	mov	r17, r11
     382:	c0 e0       	ldi	r28, 0x00	; 0
     384:	d0 e0       	ldi	r29, 0x00	; 0
     386:	f8 01       	movw	r30, r16
     388:	61 91       	ld	r22, Z+
     38a:	8f 01       	movw	r16, r30
     38c:	21 96       	adiw	r28, 0x01	; 1
     38e:	ce 01       	movw	r24, r28
     390:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     394:	c4 30       	cpi	r28, 0x04	; 4
     396:	d1 05       	cpc	r29, r1
     398:	b1 f7       	brne	.-20     	; 0x386 <wiz5200Init+0x6a>
     39a:	0e 2d       	mov	r16, r14
     39c:	1f 2d       	mov	r17, r15
     39e:	c5 e0       	ldi	r28, 0x05	; 5
     3a0:	d0 e0       	ldi	r29, 0x00	; 0
     3a2:	f8 01       	movw	r30, r16
     3a4:	61 91       	ld	r22, Z+
     3a6:	8f 01       	movw	r16, r30
     3a8:	ce 01       	movw	r24, r28
     3aa:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     3ae:	21 96       	adiw	r28, 0x01	; 1
     3b0:	c9 30       	cpi	r28, 0x09	; 9
     3b2:	d1 05       	cpc	r29, r1
     3b4:	b1 f7       	brne	.-20     	; 0x3a2 <wiz5200Init+0x86>
     3b6:	65 e0       	ldi	r22, 0x05	; 5
     3b8:	80 e0       	ldi	r24, 0x00	; 0
     3ba:	90 ec       	ldi	r25, 0xC0	; 192
     3bc:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     3c0:	65 e0       	ldi	r22, 0x05	; 5
     3c2:	80 e0       	ldi	r24, 0x00	; 0
     3c4:	90 e8       	ldi	r25, 0x80	; 128
     3c6:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	1f 91       	pop	r17
     3d2:	0f 91       	pop	r16
     3d4:	ff 90       	pop	r15
     3d6:	ef 90       	pop	r14
     3d8:	df 90       	pop	r13
     3da:	cf 90       	pop	r12
     3dc:	bf 90       	pop	r11
     3de:	af 90       	pop	r10
     3e0:	08 95       	ret

000003e2 <close>:
     3e2:	60 e1       	ldi	r22, 0x10	; 16
     3e4:	81 e0       	ldi	r24, 0x01	; 1
     3e6:	90 e4       	ldi	r25, 0x40	; 64
     3e8:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	90 e4       	ldi	r25, 0x40	; 64
     3f0:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     3f4:	81 11       	cpse	r24, r1
     3f6:	fa cf       	rjmp	.-12     	; 0x3ec <close+0xa>
     3f8:	08 95       	ret

000003fa <disconnect>:
     3fa:	68 e0       	ldi	r22, 0x08	; 8
     3fc:	81 e0       	ldi	r24, 0x01	; 1
     3fe:	90 e4       	ldi	r25, 0x40	; 64
     400:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	90 e4       	ldi	r25, 0x40	; 64
     408:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     40c:	81 11       	cpse	r24, r1
     40e:	fa cf       	rjmp	.-12     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     410:	08 95       	ret

00000412 <listen>:
     412:	83 e0       	ldi	r24, 0x03	; 3
     414:	90 e4       	ldi	r25, 0x40	; 64
     416:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     41a:	83 31       	cpi	r24, 0x13	; 19
     41c:	a9 f4       	brne	.+42     	; 0x448 <listen+0x36>
     41e:	62 e0       	ldi	r22, 0x02	; 2
     420:	81 e0       	ldi	r24, 0x01	; 1
     422:	90 e4       	ldi	r25, 0x40	; 64
     424:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	90 e4       	ldi	r25, 0x40	; 64
     42c:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     430:	81 11       	cpse	r24, r1
     432:	fa cf       	rjmp	.-12     	; 0x428 <listen+0x16>
     434:	83 e0       	ldi	r24, 0x03	; 3
     436:	90 e4       	ldi	r25, 0x40	; 64
     438:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     43c:	84 31       	cpi	r24, 0x14	; 20
     43e:	31 f0       	breq	.+12     	; 0x44c <listen+0x3a>
     440:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <close>
     444:	80 e0       	ldi	r24, 0x00	; 0
     446:	08 95       	ret
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	08 95       	ret
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	08 95       	ret

00000450 <send>:
     450:	af 92       	push	r10
     452:	bf 92       	push	r11
     454:	cf 92       	push	r12
     456:	df 92       	push	r13
     458:	ef 92       	push	r14
     45a:	ff 92       	push	r15
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	7c 01       	movw	r14, r24
     466:	8b 01       	movw	r16, r22
     468:	67 2b       	or	r22, r23
     46a:	09 f4       	brne	.+2      	; 0x46e <send+0x1e>
     46c:	5c c0       	rjmp	.+184    	; 0x526 <send+0xd6>
     46e:	80 e2       	ldi	r24, 0x20	; 32
     470:	90 e4       	ldi	r25, 0x40	; 64
     472:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     476:	c8 2f       	mov	r28, r24
     478:	d0 e0       	ldi	r29, 0x00	; 0
     47a:	dc 2f       	mov	r29, r28
     47c:	cc 27       	eor	r28, r28
     47e:	81 e2       	ldi	r24, 0x21	; 33
     480:	90 e4       	ldi	r25, 0x40	; 64
     482:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     486:	c8 0f       	add	r28, r24
     488:	d1 1d       	adc	r29, r1
     48a:	c0 17       	cp	r28, r16
     48c:	d1 07       	cpc	r29, r17
     48e:	08 f4       	brcc	.+2      	; 0x492 <send+0x42>
     490:	5e c0       	rjmp	.+188    	; 0x54e <send+0xfe>
     492:	4c c0       	rjmp	.+152    	; 0x52c <send+0xdc>
     494:	8f e9       	ldi	r24, 0x9F	; 159
     496:	9f e0       	ldi	r25, 0x0F	; 15
     498:	01 97       	sbiw	r24, 0x01	; 1
     49a:	f1 f7       	brne	.-4      	; 0x498 <send+0x48>
     49c:	00 c0       	rjmp	.+0      	; 0x49e <send+0x4e>
     49e:	00 00       	nop
     4a0:	80 e2       	ldi	r24, 0x20	; 32
     4a2:	90 e4       	ldi	r25, 0x40	; 64
     4a4:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	d8 2f       	mov	r29, r24
     4ac:	cc 27       	eor	r28, r28
     4ae:	81 e2       	ldi	r24, 0x21	; 33
     4b0:	90 e4       	ldi	r25, 0x40	; 64
     4b2:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     4b6:	fe 01       	movw	r30, r28
     4b8:	e8 0f       	add	r30, r24
     4ba:	f1 1d       	adc	r31, r1
     4bc:	cf 01       	movw	r24, r30
     4be:	f1 e0       	ldi	r31, 0x01	; 1
     4c0:	cf 1a       	sub	r12, r31
     4c2:	d1 08       	sbc	r13, r1
     4c4:	19 f4       	brne	.+6      	; 0x4cc <send+0x7c>
     4c6:	0e 94 fd 01 	call	0x3fa	; 0x3fa <disconnect>
     4ca:	5d c0       	rjmp	.+186    	; 0x586 <send+0x136>
     4cc:	80 17       	cp	r24, r16
     4ce:	91 07       	cpc	r25, r17
     4d0:	08 f3       	brcs	.-62     	; 0x494 <send+0x44>
     4d2:	2c c0       	rjmp	.+88     	; 0x52c <send+0xdc>
     4d4:	21 97       	sbiw	r28, 0x01	; 1
     4d6:	c6 01       	movw	r24, r12
     4d8:	97 70       	andi	r25, 0x07	; 7
     4da:	f7 01       	movw	r30, r14
     4dc:	61 91       	ld	r22, Z+
     4de:	7f 01       	movw	r14, r30
     4e0:	90 58       	subi	r25, 0x80	; 128
     4e2:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     4e6:	ff ef       	ldi	r31, 0xFF	; 255
     4e8:	cf 1a       	sub	r12, r31
     4ea:	df 0a       	sbc	r13, r31
     4ec:	20 97       	sbiw	r28, 0x00	; 0
     4ee:	91 f7       	brne	.-28     	; 0x4d4 <send+0x84>
     4f0:	0a 0d       	add	r16, r10
     4f2:	1b 1d       	adc	r17, r11
     4f4:	61 2f       	mov	r22, r17
     4f6:	84 e2       	ldi	r24, 0x24	; 36
     4f8:	90 e4       	ldi	r25, 0x40	; 64
     4fa:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     4fe:	60 2f       	mov	r22, r16
     500:	85 e2       	ldi	r24, 0x25	; 37
     502:	90 e4       	ldi	r25, 0x40	; 64
     504:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     508:	60 e2       	ldi	r22, 0x20	; 32
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	90 e4       	ldi	r25, 0x40	; 64
     50e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     512:	81 e0       	ldi	r24, 0x01	; 1
     514:	90 e4       	ldi	r25, 0x40	; 64
     516:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     51a:	81 11       	cpse	r24, r1
     51c:	fa cf       	rjmp	.-12     	; 0x512 <send+0xc2>
     51e:	cc 24       	eor	r12, r12
     520:	c3 94       	inc	r12
     522:	d1 2c       	mov	r13, r1
     524:	30 c0       	rjmp	.+96     	; 0x586 <send+0x136>
     526:	c1 2c       	mov	r12, r1
     528:	d1 2c       	mov	r13, r1
     52a:	2d c0       	rjmp	.+90     	; 0x586 <send+0x136>
     52c:	84 e2       	ldi	r24, 0x24	; 36
     52e:	90 e4       	ldi	r25, 0x40	; 64
     530:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     534:	a8 2e       	mov	r10, r24
     536:	85 e2       	ldi	r24, 0x25	; 37
     538:	90 e4       	ldi	r25, 0x40	; 64
     53a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     53e:	b1 2c       	mov	r11, r1
     540:	ba 2c       	mov	r11, r10
     542:	aa 24       	eor	r10, r10
     544:	a8 0e       	add	r10, r24
     546:	b1 1c       	adc	r11, r1
     548:	65 01       	movw	r12, r10
     54a:	e8 01       	movw	r28, r16
     54c:	c3 cf       	rjmp	.-122    	; 0x4d4 <send+0x84>
     54e:	8f e9       	ldi	r24, 0x9F	; 159
     550:	9f e0       	ldi	r25, 0x0F	; 15
     552:	01 97       	sbiw	r24, 0x01	; 1
     554:	f1 f7       	brne	.-4      	; 0x552 <send+0x102>
     556:	00 c0       	rjmp	.+0      	; 0x558 <send+0x108>
     558:	00 00       	nop
     55a:	80 e2       	ldi	r24, 0x20	; 32
     55c:	90 e4       	ldi	r25, 0x40	; 64
     55e:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	d8 2f       	mov	r29, r24
     566:	cc 27       	eor	r28, r28
     568:	81 e2       	ldi	r24, 0x21	; 33
     56a:	90 e4       	ldi	r25, 0x40	; 64
     56c:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     570:	fe 01       	movw	r30, r28
     572:	e8 0f       	add	r30, r24
     574:	f1 1d       	adc	r31, r1
     576:	cf 01       	movw	r24, r30
     578:	0f 2e       	mov	r0, r31
     57a:	f9 ee       	ldi	r31, 0xE9	; 233
     57c:	cf 2e       	mov	r12, r31
     57e:	f3 e0       	ldi	r31, 0x03	; 3
     580:	df 2e       	mov	r13, r31
     582:	f0 2d       	mov	r31, r0
     584:	a3 cf       	rjmp	.-186    	; 0x4cc <send+0x7c>
     586:	c6 01       	movw	r24, r12
     588:	df 91       	pop	r29
     58a:	cf 91       	pop	r28
     58c:	1f 91       	pop	r17
     58e:	0f 91       	pop	r16
     590:	ff 90       	pop	r15
     592:	ef 90       	pop	r14
     594:	df 90       	pop	r13
     596:	cf 90       	pop	r12
     598:	bf 90       	pop	r11
     59a:	af 90       	pop	r10
     59c:	08 95       	ret

0000059e <receive>:
     59e:	8f 92       	push	r8
     5a0:	9f 92       	push	r9
     5a2:	af 92       	push	r10
     5a4:	bf 92       	push	r11
     5a6:	cf 92       	push	r12
     5a8:	df 92       	push	r13
     5aa:	ef 92       	push	r14
     5ac:	ff 92       	push	r15
     5ae:	0f 93       	push	r16
     5b0:	1f 93       	push	r17
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	5c 01       	movw	r10, r24
     5b8:	6b 01       	movw	r12, r22
     5ba:	61 15       	cp	r22, r1
     5bc:	71 05       	cpc	r23, r1
     5be:	09 f4       	brne	.+2      	; 0x5c2 <receive+0x24>
     5c0:	44 c0       	rjmp	.+136    	; 0x64a <receive+0xac>
     5c2:	61 30       	cpi	r22, 0x01	; 1
     5c4:	72 40       	sbci	r23, 0x02	; 2
     5c6:	78 f1       	brcs	.+94     	; 0x626 <receive+0x88>
     5c8:	0f 2e       	mov	r0, r31
     5ca:	fe ef       	ldi	r31, 0xFE	; 254
     5cc:	cf 2e       	mov	r12, r31
     5ce:	dd 24       	eor	r13, r13
     5d0:	d3 94       	inc	r13
     5d2:	f0 2d       	mov	r31, r0
     5d4:	28 c0       	rjmp	.+80     	; 0x626 <receive+0x88>
     5d6:	21 97       	sbiw	r28, 0x01	; 1
     5d8:	c4 01       	movw	r24, r8
     5da:	97 70       	andi	r25, 0x07	; 7
     5dc:	90 54       	subi	r25, 0x40	; 64
     5de:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     5e2:	f8 01       	movw	r30, r16
     5e4:	81 93       	st	Z+, r24
     5e6:	8f 01       	movw	r16, r30
     5e8:	ff ef       	ldi	r31, 0xFF	; 255
     5ea:	8f 1a       	sub	r8, r31
     5ec:	9f 0a       	sbc	r9, r31
     5ee:	20 97       	sbiw	r28, 0x00	; 0
     5f0:	91 f7       	brne	.-28     	; 0x5d6 <receive+0x38>
     5f2:	ec 0c       	add	r14, r12
     5f4:	fd 1c       	adc	r15, r13
     5f6:	f5 01       	movw	r30, r10
     5f8:	ec 0d       	add	r30, r12
     5fa:	fd 1d       	adc	r31, r13
     5fc:	10 82       	st	Z, r1
     5fe:	6f 2d       	mov	r22, r15
     600:	88 e2       	ldi	r24, 0x28	; 40
     602:	90 e4       	ldi	r25, 0x40	; 64
     604:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     608:	6e 2d       	mov	r22, r14
     60a:	89 e2       	ldi	r24, 0x29	; 41
     60c:	90 e4       	ldi	r25, 0x40	; 64
     60e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     612:	60 e4       	ldi	r22, 0x40	; 64
     614:	81 e0       	ldi	r24, 0x01	; 1
     616:	90 e4       	ldi	r25, 0x40	; 64
     618:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     61c:	8a e1       	ldi	r24, 0x1A	; 26
     61e:	8a 95       	dec	r24
     620:	f1 f7       	brne	.-4      	; 0x61e <receive+0x80>
     622:	00 c0       	rjmp	.+0      	; 0x624 <receive+0x86>
     624:	12 c0       	rjmp	.+36     	; 0x64a <receive+0xac>
     626:	88 e2       	ldi	r24, 0x28	; 40
     628:	90 e4       	ldi	r25, 0x40	; 64
     62a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     62e:	e8 2e       	mov	r14, r24
     630:	89 e2       	ldi	r24, 0x29	; 41
     632:	90 e4       	ldi	r25, 0x40	; 64
     634:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     638:	f1 2c       	mov	r15, r1
     63a:	fe 2c       	mov	r15, r14
     63c:	ee 24       	eor	r14, r14
     63e:	e8 0e       	add	r14, r24
     640:	f1 1c       	adc	r15, r1
     642:	47 01       	movw	r8, r14
     644:	e6 01       	movw	r28, r12
     646:	85 01       	movw	r16, r10
     648:	c6 cf       	rjmp	.-116    	; 0x5d6 <receive+0x38>
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	1f 91       	pop	r17
     654:	0f 91       	pop	r16
     656:	ff 90       	pop	r15
     658:	ef 90       	pop	r14
     65a:	df 90       	pop	r13
     65c:	cf 90       	pop	r12
     65e:	bf 90       	pop	r11
     660:	af 90       	pop	r10
     662:	9f 90       	pop	r9
     664:	8f 90       	pop	r8
     666:	08 95       	ret

00000668 <receiveSize>:
     668:	cf 93       	push	r28
     66a:	86 e2       	ldi	r24, 0x26	; 38
     66c:	90 e4       	ldi	r25, 0x40	; 64
     66e:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     672:	c8 2f       	mov	r28, r24
     674:	87 e2       	ldi	r24, 0x27	; 39
     676:	90 e4       	ldi	r25, 0x40	; 64
     678:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     67c:	2c 2f       	mov	r18, r28
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	32 2f       	mov	r19, r18
     682:	22 27       	eor	r18, r18
     684:	a9 01       	movw	r20, r18
     686:	48 0f       	add	r20, r24
     688:	51 1d       	adc	r21, r1
     68a:	ca 01       	movw	r24, r20
     68c:	cf 91       	pop	r28
     68e:	08 95       	ret

00000690 <connect>:
     690:	cf 92       	push	r12
     692:	df 92       	push	r13
     694:	ef 92       	push	r14
     696:	ff 92       	push	r15
     698:	cf 93       	push	r28
     69a:	df 93       	push	r29
     69c:	ec 01       	movw	r28, r24
     69e:	f6 2e       	mov	r15, r22
     6a0:	e7 2e       	mov	r14, r23
     6a2:	d4 2e       	mov	r13, r20
     6a4:	c5 2e       	mov	r12, r21
     6a6:	61 e0       	ldi	r22, 0x01	; 1
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	90 e4       	ldi	r25, 0x40	; 64
     6ac:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     6b0:	6c 2d       	mov	r22, r12
     6b2:	84 e0       	ldi	r24, 0x04	; 4
     6b4:	90 e4       	ldi	r25, 0x40	; 64
     6b6:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     6ba:	6d 2d       	mov	r22, r13
     6bc:	85 e0       	ldi	r24, 0x05	; 5
     6be:	90 e4       	ldi	r25, 0x40	; 64
     6c0:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     6c4:	68 81       	ld	r22, Y
     6c6:	8c e0       	ldi	r24, 0x0C	; 12
     6c8:	90 e4       	ldi	r25, 0x40	; 64
     6ca:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     6ce:	69 81       	ldd	r22, Y+1	; 0x01
     6d0:	8d e0       	ldi	r24, 0x0D	; 13
     6d2:	90 e4       	ldi	r25, 0x40	; 64
     6d4:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     6d8:	6a 81       	ldd	r22, Y+2	; 0x02
     6da:	8e e0       	ldi	r24, 0x0E	; 14
     6dc:	90 e4       	ldi	r25, 0x40	; 64
     6de:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     6e2:	6b 81       	ldd	r22, Y+3	; 0x03
     6e4:	8f e0       	ldi	r24, 0x0F	; 15
     6e6:	90 e4       	ldi	r25, 0x40	; 64
     6e8:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     6ec:	6e 2d       	mov	r22, r14
     6ee:	80 e1       	ldi	r24, 0x10	; 16
     6f0:	90 e4       	ldi	r25, 0x40	; 64
     6f2:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     6f6:	6f 2d       	mov	r22, r15
     6f8:	81 e1       	ldi	r24, 0x11	; 17
     6fa:	90 e4       	ldi	r25, 0x40	; 64
     6fc:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     700:	61 e0       	ldi	r22, 0x01	; 1
     702:	81 e0       	ldi	r24, 0x01	; 1
     704:	90 e4       	ldi	r25, 0x40	; 64
     706:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     70a:	83 e0       	ldi	r24, 0x03	; 3
     70c:	90 e4       	ldi	r25, 0x40	; 64
     70e:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     712:	83 31       	cpi	r24, 0x13	; 19
     714:	d1 f7       	brne	.-12     	; 0x70a <connect+0x7a>
     716:	64 e0       	ldi	r22, 0x04	; 4
     718:	81 e0       	ldi	r24, 0x01	; 1
     71a:	90 e4       	ldi	r25, 0x40	; 64
     71c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     720:	83 e0       	ldi	r24, 0x03	; 3
     722:	90 e4       	ldi	r25, 0x40	; 64
     724:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     728:	87 31       	cpi	r24, 0x17	; 23
     72a:	d1 f1       	breq	.+116    	; 0x7a0 <connect+0x110>
     72c:	c1 2c       	mov	r12, r1
     72e:	d1 2c       	mov	r13, r1
     730:	76 01       	movw	r14, r12
     732:	61 e0       	ldi	r22, 0x01	; 1
     734:	81 e0       	ldi	r24, 0x01	; 1
     736:	90 e4       	ldi	r25, 0x40	; 64
     738:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     73c:	83 e0       	ldi	r24, 0x03	; 3
     73e:	90 e4       	ldi	r25, 0x40	; 64
     740:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     744:	83 31       	cpi	r24, 0x13	; 19
     746:	d1 f7       	brne	.-12     	; 0x73c <connect+0xac>
     748:	64 e0       	ldi	r22, 0x04	; 4
     74a:	81 e0       	ldi	r24, 0x01	; 1
     74c:	90 e4       	ldi	r25, 0x40	; 64
     74e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <wiz5200Write>
     752:	2f ef       	ldi	r18, 0xFF	; 255
     754:	81 ee       	ldi	r24, 0xE1	; 225
     756:	94 e0       	ldi	r25, 0x04	; 4
     758:	21 50       	subi	r18, 0x01	; 1
     75a:	80 40       	sbci	r24, 0x00	; 0
     75c:	90 40       	sbci	r25, 0x00	; 0
     75e:	e1 f7       	brne	.-8      	; 0x758 <connect+0xc8>
     760:	00 c0       	rjmp	.+0      	; 0x762 <connect+0xd2>
     762:	00 00       	nop
     764:	83 e0       	ldi	r24, 0x03	; 3
     766:	90 e4       	ldi	r25, 0x40	; 64
     768:	0e 94 70 01 	call	0x2e0	; 0x2e0 <wiz5200Read>
     76c:	c8 2f       	mov	r28, r24
     76e:	21 e0       	ldi	r18, 0x01	; 1
     770:	4a e0       	ldi	r20, 0x0A	; 10
     772:	c7 01       	movw	r24, r14
     774:	b6 01       	movw	r22, r12
     776:	0e 94 ef 00 	call	0x1de	; 0x1de <serialSendInt>
     77a:	24 e6       	ldi	r18, 0x64	; 100
     77c:	c2 16       	cp	r12, r18
     77e:	d1 04       	cpc	r13, r1
     780:	e1 04       	cpc	r14, r1
     782:	f1 04       	cpc	r15, r1
     784:	21 f4       	brne	.+8      	; 0x78e <connect+0xfe>
     786:	0e 94 fd 01 	call	0x3fa	; 0x3fa <disconnect>
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	0a c0       	rjmp	.+20     	; 0x7a2 <connect+0x112>
     78e:	8f ef       	ldi	r24, 0xFF	; 255
     790:	c8 1a       	sub	r12, r24
     792:	d8 0a       	sbc	r13, r24
     794:	e8 0a       	sbc	r14, r24
     796:	f8 0a       	sbc	r15, r24
     798:	c7 31       	cpi	r28, 0x17	; 23
     79a:	59 f6       	brne	.-106    	; 0x732 <connect+0xa2>
     79c:	87 e1       	ldi	r24, 0x17	; 23
     79e:	01 c0       	rjmp	.+2      	; 0x7a2 <connect+0x112>
     7a0:	87 e1       	ldi	r24, 0x17	; 23
     7a2:	df 91       	pop	r29
     7a4:	cf 91       	pop	r28
     7a6:	ff 90       	pop	r15
     7a8:	ef 90       	pop	r14
     7aa:	df 90       	pop	r13
     7ac:	cf 90       	pop	r12
     7ae:	08 95       	ret

000007b0 <dhtStart>:
     7b0:	57 9a       	sbi	0x0a, 7	; 10
     7b2:	5f 9a       	sbi	0x0b, 7	; 11
     7b4:	08 95       	ret

000007b6 <dhtRead>:
     7b6:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <HM+0x1>
     7ba:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <HM>
     7be:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <__data_end+0x1>
     7c2:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <__data_end>
     7c6:	10 92 95 04 	sts	0x0495, r1	; 0x800495 <SUM>
     7ca:	5f 98       	cbi	0x0b, 7	; 11
     7cc:	8f e3       	ldi	r24, 0x3F	; 63
     7ce:	9f e1       	ldi	r25, 0x1F	; 31
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	f1 f7       	brne	.-4      	; 0x7d0 <dhtRead+0x1a>
     7d4:	00 c0       	rjmp	.+0      	; 0x7d6 <dhtRead+0x20>
     7d6:	00 00       	nop
     7d8:	5f 9a       	sbi	0x0b, 7	; 11
     7da:	57 98       	cbi	0x0a, 7	; 10
     7dc:	9a e6       	ldi	r25, 0x6A	; 106
     7de:	9a 95       	dec	r25
     7e0:	f1 f7       	brne	.-4      	; 0x7de <dhtRead+0x28>
     7e2:	00 c0       	rjmp	.+0      	; 0x7e4 <dhtRead+0x2e>
     7e4:	4f 9b       	sbis	0x09, 7	; 9
     7e6:	0c c0       	rjmp	.+24     	; 0x800 <dhtRead+0x4a>
     7e8:	80 e0       	ldi	r24, 0x00	; 0
     7ea:	9a e1       	ldi	r25, 0x1A	; 26
     7ec:	9a 95       	dec	r25
     7ee:	f1 f7       	brne	.-4      	; 0x7ec <dhtRead+0x36>
     7f0:	00 c0       	rjmp	.+0      	; 0x7f2 <dhtRead+0x3c>
     7f2:	8f 5f       	subi	r24, 0xFF	; 255
     7f4:	4f 9b       	sbis	0x09, 7	; 9
     7f6:	05 c0       	rjmp	.+10     	; 0x802 <dhtRead+0x4c>
     7f8:	88 30       	cpi	r24, 0x08	; 8
     7fa:	b9 f7       	brne	.-18     	; 0x7ea <dhtRead+0x34>
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	08 95       	ret
     800:	80 e0       	ldi	r24, 0x00	; 0
     802:	88 30       	cpi	r24, 0x08	; 8
     804:	08 f0       	brcs	.+2      	; 0x808 <dhtRead+0x52>
     806:	75 c0       	rjmp	.+234    	; 0x8f2 <dhtRead+0x13c>
     808:	4f 9b       	sbis	0x09, 7	; 9
     80a:	fe cf       	rjmp	.-4      	; 0x808 <dhtRead+0x52>
     80c:	4f 99       	sbic	0x09, 7	; 9
     80e:	fe cf       	rjmp	.-4      	; 0x80c <dhtRead+0x56>
     810:	2f e0       	ldi	r18, 0x0F	; 15
     812:	30 e0       	ldi	r19, 0x00	; 0
     814:	61 e0       	ldi	r22, 0x01	; 1
     816:	70 e0       	ldi	r23, 0x00	; 0
     818:	4f 9b       	sbis	0x09, 7	; 9
     81a:	fe cf       	rjmp	.-4      	; 0x818 <dhtRead+0x62>
     81c:	4f 9b       	sbis	0x09, 7	; 9
     81e:	1b c0       	rjmp	.+54     	; 0x856 <dhtRead+0xa0>
     820:	80 e0       	ldi	r24, 0x00	; 0
     822:	9a e0       	ldi	r25, 0x0A	; 10
     824:	9a 95       	dec	r25
     826:	f1 f7       	brne	.-4      	; 0x824 <dhtRead+0x6e>
     828:	00 c0       	rjmp	.+0      	; 0x82a <dhtRead+0x74>
     82a:	8f 5f       	subi	r24, 0xFF	; 255
     82c:	4f 99       	sbic	0x09, 7	; 9
     82e:	f9 cf       	rjmp	.-14     	; 0x822 <dhtRead+0x6c>
     830:	80 31       	cpi	r24, 0x10	; 16
     832:	88 f0       	brcs	.+34     	; 0x856 <dhtRead+0xa0>
     834:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <HM>
     838:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <HM+0x1>
     83c:	ab 01       	movw	r20, r22
     83e:	02 2e       	mov	r0, r18
     840:	02 c0       	rjmp	.+4      	; 0x846 <dhtRead+0x90>
     842:	44 0f       	add	r20, r20
     844:	55 1f       	adc	r21, r21
     846:	0a 94       	dec	r0
     848:	e2 f7       	brpl	.-8      	; 0x842 <dhtRead+0x8c>
     84a:	84 2b       	or	r24, r20
     84c:	95 2b       	or	r25, r21
     84e:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <HM+0x1>
     852:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <HM>
     856:	21 50       	subi	r18, 0x01	; 1
     858:	31 09       	sbc	r19, r1
     85a:	f0 f6       	brcc	.-68     	; 0x818 <dhtRead+0x62>
     85c:	2f e0       	ldi	r18, 0x0F	; 15
     85e:	30 e0       	ldi	r19, 0x00	; 0
     860:	61 e0       	ldi	r22, 0x01	; 1
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	4f 9b       	sbis	0x09, 7	; 9
     866:	fe cf       	rjmp	.-4      	; 0x864 <dhtRead+0xae>
     868:	4f 9b       	sbis	0x09, 7	; 9
     86a:	1b c0       	rjmp	.+54     	; 0x8a2 <dhtRead+0xec>
     86c:	80 e0       	ldi	r24, 0x00	; 0
     86e:	9a e0       	ldi	r25, 0x0A	; 10
     870:	9a 95       	dec	r25
     872:	f1 f7       	brne	.-4      	; 0x870 <dhtRead+0xba>
     874:	00 c0       	rjmp	.+0      	; 0x876 <dhtRead+0xc0>
     876:	8f 5f       	subi	r24, 0xFF	; 255
     878:	4f 99       	sbic	0x09, 7	; 9
     87a:	f9 cf       	rjmp	.-14     	; 0x86e <dhtRead+0xb8>
     87c:	80 31       	cpi	r24, 0x10	; 16
     87e:	88 f0       	brcs	.+34     	; 0x8a2 <dhtRead+0xec>
     880:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <__data_end>
     884:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <__data_end+0x1>
     888:	ab 01       	movw	r20, r22
     88a:	02 2e       	mov	r0, r18
     88c:	02 c0       	rjmp	.+4      	; 0x892 <dhtRead+0xdc>
     88e:	44 0f       	add	r20, r20
     890:	55 1f       	adc	r21, r21
     892:	0a 94       	dec	r0
     894:	e2 f7       	brpl	.-8      	; 0x88e <dhtRead+0xd8>
     896:	84 2b       	or	r24, r20
     898:	95 2b       	or	r25, r21
     89a:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <__data_end+0x1>
     89e:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <__data_end>
     8a2:	21 50       	subi	r18, 0x01	; 1
     8a4:	31 09       	sbc	r19, r1
     8a6:	f0 f6       	brcc	.-68     	; 0x864 <dhtRead+0xae>
     8a8:	27 e0       	ldi	r18, 0x07	; 7
     8aa:	30 e0       	ldi	r19, 0x00	; 0
     8ac:	61 e0       	ldi	r22, 0x01	; 1
     8ae:	70 e0       	ldi	r23, 0x00	; 0
     8b0:	4f 9b       	sbis	0x09, 7	; 9
     8b2:	fe cf       	rjmp	.-4      	; 0x8b0 <dhtRead+0xfa>
     8b4:	4f 9b       	sbis	0x09, 7	; 9
     8b6:	16 c0       	rjmp	.+44     	; 0x8e4 <dhtRead+0x12e>
     8b8:	80 e0       	ldi	r24, 0x00	; 0
     8ba:	9a e0       	ldi	r25, 0x0A	; 10
     8bc:	9a 95       	dec	r25
     8be:	f1 f7       	brne	.-4      	; 0x8bc <dhtRead+0x106>
     8c0:	00 c0       	rjmp	.+0      	; 0x8c2 <dhtRead+0x10c>
     8c2:	8f 5f       	subi	r24, 0xFF	; 255
     8c4:	4f 99       	sbic	0x09, 7	; 9
     8c6:	f9 cf       	rjmp	.-14     	; 0x8ba <dhtRead+0x104>
     8c8:	80 31       	cpi	r24, 0x10	; 16
     8ca:	60 f0       	brcs	.+24     	; 0x8e4 <dhtRead+0x12e>
     8cc:	40 91 95 04 	lds	r20, 0x0495	; 0x800495 <SUM>
     8d0:	cb 01       	movw	r24, r22
     8d2:	02 2e       	mov	r0, r18
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <dhtRead+0x124>
     8d6:	88 0f       	add	r24, r24
     8d8:	99 1f       	adc	r25, r25
     8da:	0a 94       	dec	r0
     8dc:	e2 f7       	brpl	.-8      	; 0x8d6 <dhtRead+0x120>
     8de:	84 2b       	or	r24, r20
     8e0:	80 93 95 04 	sts	0x0495, r24	; 0x800495 <SUM>
     8e4:	21 50       	subi	r18, 0x01	; 1
     8e6:	31 09       	sbc	r19, r1
     8e8:	18 f7       	brcc	.-58     	; 0x8b0 <dhtRead+0xfa>
     8ea:	57 9a       	sbi	0x0a, 7	; 10
     8ec:	5f 9a       	sbi	0x0b, 7	; 11
     8ee:	81 e0       	ldi	r24, 0x01	; 1
     8f0:	08 95       	ret
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	08 95       	ret

000008f6 <begin>:
     8f6:	cf 93       	push	r28
     8f8:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <oversampling>
     8fc:	0e 94 53 00 	call	0xa6	; 0xa6 <i2cInit>
     900:	8e ee       	ldi	r24, 0xEE	; 238
     902:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     906:	c8 2f       	mov	r28, r24
     908:	88 23       	and	r24, r24
     90a:	31 f0       	breq	.+12     	; 0x918 <__stack+0x19>
     90c:	88 e3       	ldi	r24, 0x38	; 56
     90e:	91 e0       	ldi	r25, 0x01	; 1
     910:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <serialString>
     914:	c1 e0       	ldi	r28, 0x01	; 1
     916:	47 c1       	rjmp	.+654    	; 0xba6 <__stack+0x2a7>
     918:	8a ea       	ldi	r24, 0xAA	; 170
     91a:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     91e:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     922:	8f ee       	ldi	r24, 0xEF	; 239
     924:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     928:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     92c:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <ac1>
     930:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <ac1+0x1>
     934:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     938:	20 91 84 02 	lds	r18, 0x0284	; 0x800284 <ac1>
     93c:	30 91 85 02 	lds	r19, 0x0285	; 0x800285 <ac1+0x1>
     940:	28 2b       	or	r18, r24
     942:	30 93 85 02 	sts	0x0285, r19	; 0x800285 <ac1+0x1>
     946:	20 93 84 02 	sts	0x0284, r18	; 0x800284 <ac1>
     94a:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     94e:	8e ee       	ldi	r24, 0xEE	; 238
     950:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     954:	8c ea       	ldi	r24, 0xAC	; 172
     956:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     95a:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     95e:	8f ee       	ldi	r24, 0xEF	; 239
     960:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     964:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     968:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <ac2>
     96c:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <ac2+0x1>
     970:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     974:	20 91 8c 02 	lds	r18, 0x028C	; 0x80028c <ac2>
     978:	30 91 8d 02 	lds	r19, 0x028D	; 0x80028d <ac2+0x1>
     97c:	28 2b       	or	r18, r24
     97e:	30 93 8d 02 	sts	0x028D, r19	; 0x80028d <ac2+0x1>
     982:	20 93 8c 02 	sts	0x028C, r18	; 0x80028c <ac2>
     986:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     98a:	8e ee       	ldi	r24, 0xEE	; 238
     98c:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     990:	8e ea       	ldi	r24, 0xAE	; 174
     992:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     996:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     99a:	8f ee       	ldi	r24, 0xEF	; 239
     99c:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     9a0:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     9a4:	10 92 96 04 	sts	0x0496, r1	; 0x800496 <ac3>
     9a8:	80 93 97 04 	sts	0x0497, r24	; 0x800497 <ac3+0x1>
     9ac:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     9b0:	20 91 96 04 	lds	r18, 0x0496	; 0x800496 <ac3>
     9b4:	30 91 97 04 	lds	r19, 0x0497	; 0x800497 <ac3+0x1>
     9b8:	28 2b       	or	r18, r24
     9ba:	30 93 97 04 	sts	0x0497, r19	; 0x800497 <ac3+0x1>
     9be:	20 93 96 04 	sts	0x0496, r18	; 0x800496 <ac3>
     9c2:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     9c6:	8e ee       	ldi	r24, 0xEE	; 238
     9c8:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     9cc:	80 eb       	ldi	r24, 0xB0	; 176
     9ce:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     9d2:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     9d6:	8f ee       	ldi	r24, 0xEF	; 239
     9d8:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     9dc:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     9e0:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <ac4>
     9e4:	80 93 91 02 	sts	0x0291, r24	; 0x800291 <ac4+0x1>
     9e8:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     9ec:	20 91 90 02 	lds	r18, 0x0290	; 0x800290 <ac4>
     9f0:	30 91 91 02 	lds	r19, 0x0291	; 0x800291 <ac4+0x1>
     9f4:	28 2b       	or	r18, r24
     9f6:	30 93 91 02 	sts	0x0291, r19	; 0x800291 <ac4+0x1>
     9fa:	20 93 90 02 	sts	0x0290, r18	; 0x800290 <ac4>
     9fe:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     a02:	8e ee       	ldi	r24, 0xEE	; 238
     a04:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     a08:	82 eb       	ldi	r24, 0xB2	; 178
     a0a:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     a0e:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     a12:	8f ee       	ldi	r24, 0xEF	; 239
     a14:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     a18:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     a1c:	10 92 8a 02 	sts	0x028A, r1	; 0x80028a <ac5>
     a20:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <ac5+0x1>
     a24:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     a28:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <ac5>
     a2c:	30 91 8b 02 	lds	r19, 0x028B	; 0x80028b <ac5+0x1>
     a30:	28 2b       	or	r18, r24
     a32:	30 93 8b 02 	sts	0x028B, r19	; 0x80028b <ac5+0x1>
     a36:	20 93 8a 02 	sts	0x028A, r18	; 0x80028a <ac5>
     a3a:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     a3e:	8e ee       	ldi	r24, 0xEE	; 238
     a40:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     a44:	84 eb       	ldi	r24, 0xB4	; 180
     a46:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     a4a:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     a4e:	8f ee       	ldi	r24, 0xEF	; 239
     a50:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     a54:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     a58:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <ac6>
     a5c:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <ac6+0x1>
     a60:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     a64:	20 91 88 02 	lds	r18, 0x0288	; 0x800288 <ac6>
     a68:	30 91 89 02 	lds	r19, 0x0289	; 0x800289 <ac6+0x1>
     a6c:	28 2b       	or	r18, r24
     a6e:	30 93 89 02 	sts	0x0289, r19	; 0x800289 <ac6+0x1>
     a72:	20 93 88 02 	sts	0x0288, r18	; 0x800288 <ac6>
     a76:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     a7a:	8e ee       	ldi	r24, 0xEE	; 238
     a7c:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     a80:	86 eb       	ldi	r24, 0xB6	; 182
     a82:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     a86:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     a8a:	8f ee       	ldi	r24, 0xEF	; 239
     a8c:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     a90:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     a94:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <b1>
     a98:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <b1+0x1>
     a9c:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     aa0:	20 91 86 02 	lds	r18, 0x0286	; 0x800286 <b1>
     aa4:	30 91 87 02 	lds	r19, 0x0287	; 0x800287 <b1+0x1>
     aa8:	28 2b       	or	r18, r24
     aaa:	30 93 87 02 	sts	0x0287, r19	; 0x800287 <b1+0x1>
     aae:	20 93 86 02 	sts	0x0286, r18	; 0x800286 <b1>
     ab2:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     ab6:	8e ee       	ldi	r24, 0xEE	; 238
     ab8:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     abc:	88 eb       	ldi	r24, 0xB8	; 184
     abe:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     ac2:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     ac6:	8f ee       	ldi	r24, 0xEF	; 239
     ac8:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     acc:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     ad0:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <b2>
     ad4:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <b2+0x1>
     ad8:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     adc:	20 91 80 02 	lds	r18, 0x0280	; 0x800280 <b2>
     ae0:	30 91 81 02 	lds	r19, 0x0281	; 0x800281 <b2+0x1>
     ae4:	28 2b       	or	r18, r24
     ae6:	30 93 81 02 	sts	0x0281, r19	; 0x800281 <b2+0x1>
     aea:	20 93 80 02 	sts	0x0280, r18	; 0x800280 <b2>
     aee:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     af2:	8e ee       	ldi	r24, 0xEE	; 238
     af4:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     af8:	8a eb       	ldi	r24, 0xBA	; 186
     afa:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     afe:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     b02:	8f ee       	ldi	r24, 0xEF	; 239
     b04:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     b08:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     b0c:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <mb>
     b10:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <mb+0x1>
     b14:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     b18:	20 91 82 02 	lds	r18, 0x0282	; 0x800282 <mb>
     b1c:	30 91 83 02 	lds	r19, 0x0283	; 0x800283 <mb+0x1>
     b20:	28 2b       	or	r18, r24
     b22:	30 93 83 02 	sts	0x0283, r19	; 0x800283 <mb+0x1>
     b26:	20 93 82 02 	sts	0x0282, r18	; 0x800282 <mb>
     b2a:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     b2e:	8e ee       	ldi	r24, 0xEE	; 238
     b30:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     b34:	8c eb       	ldi	r24, 0xBC	; 188
     b36:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     b3a:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     b3e:	8f ee       	ldi	r24, 0xEF	; 239
     b40:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     b44:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     b48:	10 92 93 04 	sts	0x0493, r1	; 0x800493 <mc>
     b4c:	80 93 94 04 	sts	0x0494, r24	; 0x800494 <mc+0x1>
     b50:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     b54:	20 91 93 04 	lds	r18, 0x0493	; 0x800493 <mc>
     b58:	30 91 94 04 	lds	r19, 0x0494	; 0x800494 <mc+0x1>
     b5c:	28 2b       	or	r18, r24
     b5e:	30 93 94 04 	sts	0x0494, r19	; 0x800494 <mc+0x1>
     b62:	20 93 93 04 	sts	0x0493, r18	; 0x800493 <mc>
     b66:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     b6a:	8e ee       	ldi	r24, 0xEE	; 238
     b6c:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     b70:	8e eb       	ldi	r24, 0xBE	; 190
     b72:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     b76:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     b7a:	8f ee       	ldi	r24, 0xEF	; 239
     b7c:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     b80:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     b84:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <md>
     b88:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <md+0x1>
     b8c:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     b90:	20 91 8e 02 	lds	r18, 0x028E	; 0x80028e <md>
     b94:	30 91 8f 02 	lds	r19, 0x028F	; 0x80028f <md+0x1>
     b98:	28 2b       	or	r18, r24
     b9a:	30 93 8f 02 	sts	0x028F, r19	; 0x80028f <md+0x1>
     b9e:	20 93 8e 02 	sts	0x028E, r18	; 0x80028e <md>
     ba2:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     ba6:	8c 2f       	mov	r24, r28
     ba8:	cf 91       	pop	r28
     baa:	08 95       	ret

00000bac <readRawTemperature>:
     bac:	cf 93       	push	r28
     bae:	df 93       	push	r29
     bb0:	8e ee       	ldi	r24, 0xEE	; 238
     bb2:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     bb6:	84 ef       	ldi	r24, 0xF4	; 244
     bb8:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     bbc:	8e e2       	ldi	r24, 0x2E	; 46
     bbe:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     bc2:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     bc6:	8f e4       	ldi	r24, 0x4F	; 79
     bc8:	96 e4       	ldi	r25, 0x46	; 70
     bca:	01 97       	sbiw	r24, 0x01	; 1
     bcc:	f1 f7       	brne	.-4      	; 0xbca <readRawTemperature+0x1e>
     bce:	00 c0       	rjmp	.+0      	; 0xbd0 <readRawTemperature+0x24>
     bd0:	00 00       	nop
     bd2:	8e ee       	ldi	r24, 0xEE	; 238
     bd4:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     bd8:	86 ef       	ldi	r24, 0xF6	; 246
     bda:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     bde:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     be2:	8f ee       	ldi	r24, 0xEF	; 239
     be4:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     be8:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     bec:	c8 2f       	mov	r28, r24
     bee:	d0 e0       	ldi	r29, 0x00	; 0
     bf0:	dc 2f       	mov	r29, r28
     bf2:	cc 27       	eor	r28, r28
     bf4:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     bf8:	9e 01       	movw	r18, r28
     bfa:	28 2b       	or	r18, r24
     bfc:	c9 01       	movw	r24, r18
     bfe:	df 91       	pop	r29
     c00:	cf 91       	pop	r28
     c02:	08 95       	ret

00000c04 <readRawPressure>:
     c04:	cf 92       	push	r12
     c06:	df 92       	push	r13
     c08:	ef 92       	push	r14
     c0a:	ff 92       	push	r15
     c0c:	cf 93       	push	r28
     c0e:	8e ee       	ldi	r24, 0xEE	; 238
     c10:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     c14:	84 ef       	ldi	r24, 0xF4	; 244
     c16:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     c1a:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <oversampling>
     c1e:	82 95       	swap	r24
     c20:	88 0f       	add	r24, r24
     c22:	88 0f       	add	r24, r24
     c24:	80 7c       	andi	r24, 0xC0	; 192
     c26:	8c 5c       	subi	r24, 0xCC	; 204
     c28:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     c2c:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     c30:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <oversampling>
     c34:	81 30       	cpi	r24, 0x01	; 1
     c36:	69 f0       	breq	.+26     	; 0xc52 <readRawPressure+0x4e>
     c38:	28 f0       	brcs	.+10     	; 0xc44 <readRawPressure+0x40>
     c3a:	82 30       	cpi	r24, 0x02	; 2
     c3c:	89 f0       	breq	.+34     	; 0xc60 <readRawPressure+0x5c>
     c3e:	83 30       	cpi	r24, 0x03	; 3
     c40:	b1 f0       	breq	.+44     	; 0xc6e <readRawPressure+0x6a>
     c42:	1e c0       	rjmp	.+60     	; 0xc80 <readRawPressure+0x7c>
     c44:	8f e4       	ldi	r24, 0x4F	; 79
     c46:	96 e4       	ldi	r25, 0x46	; 70
     c48:	01 97       	sbiw	r24, 0x01	; 1
     c4a:	f1 f7       	brne	.-4      	; 0xc48 <readRawPressure+0x44>
     c4c:	00 c0       	rjmp	.+0      	; 0xc4e <readRawPressure+0x4a>
     c4e:	00 00       	nop
     c50:	17 c0       	rjmp	.+46     	; 0xc80 <readRawPressure+0x7c>
     c52:	8f e2       	ldi	r24, 0x2F	; 47
     c54:	95 e7       	ldi	r25, 0x75	; 117
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	f1 f7       	brne	.-4      	; 0xc56 <readRawPressure+0x52>
     c5a:	00 c0       	rjmp	.+0      	; 0xc5c <readRawPressure+0x58>
     c5c:	00 00       	nop
     c5e:	10 c0       	rjmp	.+32     	; 0xc80 <readRawPressure+0x7c>
     c60:	8f ee       	ldi	r24, 0xEF	; 239
     c62:	92 ed       	ldi	r25, 0xD2	; 210
     c64:	01 97       	sbiw	r24, 0x01	; 1
     c66:	f1 f7       	brne	.-4      	; 0xc64 <readRawPressure+0x60>
     c68:	00 c0       	rjmp	.+0      	; 0xc6a <readRawPressure+0x66>
     c6a:	00 00       	nop
     c6c:	09 c0       	rjmp	.+18     	; 0xc80 <readRawPressure+0x7c>
     c6e:	9f eb       	ldi	r25, 0xBF	; 191
     c70:	2e e3       	ldi	r18, 0x3E	; 62
     c72:	81 e0       	ldi	r24, 0x01	; 1
     c74:	91 50       	subi	r25, 0x01	; 1
     c76:	20 40       	sbci	r18, 0x00	; 0
     c78:	80 40       	sbci	r24, 0x00	; 0
     c7a:	e1 f7       	brne	.-8      	; 0xc74 <readRawPressure+0x70>
     c7c:	00 c0       	rjmp	.+0      	; 0xc7e <readRawPressure+0x7a>
     c7e:	00 00       	nop
     c80:	8e ee       	ldi	r24, 0xEE	; 238
     c82:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     c86:	86 ef       	ldi	r24, 0xF6	; 246
     c88:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cWrite>
     c8c:	0e 94 84 00 	call	0x108	; 0x108 <i2cStop>
     c90:	8f ee       	ldi	r24, 0xEF	; 239
     c92:	0e 94 5d 00 	call	0xba	; 0xba <i2cStart>
     c96:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     c9a:	c8 2e       	mov	r12, r24
     c9c:	d1 2c       	mov	r13, r1
     c9e:	e1 2c       	mov	r14, r1
     ca0:	f1 2c       	mov	r15, r1
     ca2:	0e 94 9f 00 	call	0x13e	; 0x13e <i2cReadAck>
     ca6:	c8 2f       	mov	r28, r24
     ca8:	0e 94 aa 00 	call	0x154	; 0x154 <i2cReadNack>
     cac:	76 01       	movw	r14, r12
     cae:	dd 24       	eor	r13, r13
     cb0:	cc 24       	eor	r12, r12
     cb2:	c8 2a       	or	r12, r24
     cb4:	6c 2f       	mov	r22, r28
     cb6:	70 e0       	ldi	r23, 0x00	; 0
     cb8:	76 2f       	mov	r23, r22
     cba:	66 27       	eor	r22, r22
     cbc:	cb 01       	movw	r24, r22
     cbe:	77 0f       	add	r23, r23
     cc0:	aa 0b       	sbc	r26, r26
     cc2:	bb 0b       	sbc	r27, r27
     cc4:	8c 29       	or	r24, r12
     cc6:	9d 29       	or	r25, r13
     cc8:	ae 29       	or	r26, r14
     cca:	bf 29       	or	r27, r15
     ccc:	40 91 92 02 	lds	r20, 0x0292	; 0x800292 <oversampling>
     cd0:	28 e0       	ldi	r18, 0x08	; 8
     cd2:	30 e0       	ldi	r19, 0x00	; 0
     cd4:	24 1b       	sub	r18, r20
     cd6:	31 09       	sbc	r19, r1
     cd8:	bc 01       	movw	r22, r24
     cda:	cd 01       	movw	r24, r26
     cdc:	04 c0       	rjmp	.+8      	; 0xce6 <readRawPressure+0xe2>
     cde:	96 95       	lsr	r25
     ce0:	87 95       	ror	r24
     ce2:	77 95       	ror	r23
     ce4:	67 95       	ror	r22
     ce6:	2a 95       	dec	r18
     ce8:	d2 f7       	brpl	.-12     	; 0xcde <readRawPressure+0xda>
     cea:	cf 91       	pop	r28
     cec:	ff 90       	pop	r15
     cee:	ef 90       	pop	r14
     cf0:	df 90       	pop	r13
     cf2:	cf 90       	pop	r12
     cf4:	08 95       	ret

00000cf6 <readPressure>:
     cf6:	4f 92       	push	r4
     cf8:	5f 92       	push	r5
     cfa:	6f 92       	push	r6
     cfc:	7f 92       	push	r7
     cfe:	8f 92       	push	r8
     d00:	9f 92       	push	r9
     d02:	af 92       	push	r10
     d04:	bf 92       	push	r11
     d06:	cf 92       	push	r12
     d08:	df 92       	push	r13
     d0a:	ef 92       	push	r14
     d0c:	ff 92       	push	r15
     d0e:	0f 93       	push	r16
     d10:	1f 93       	push	r17
     d12:	cf 93       	push	r28
     d14:	df 93       	push	r29
     d16:	cd b7       	in	r28, 0x3d	; 61
     d18:	de b7       	in	r29, 0x3e	; 62
     d1a:	28 97       	sbiw	r28, 0x08	; 8
     d1c:	0f b6       	in	r0, 0x3f	; 63
     d1e:	f8 94       	cli
     d20:	de bf       	out	0x3e, r29	; 62
     d22:	0f be       	out	0x3f, r0	; 63
     d24:	cd bf       	out	0x3d, r28	; 61
     d26:	0e 94 d6 05 	call	0xbac	; 0xbac <readRawTemperature>
     d2a:	5c 01       	movw	r10, r24
     d2c:	0e 94 02 06 	call	0xc04	; 0xc04 <readRawPressure>
     d30:	69 83       	std	Y+1, r22	; 0x01
     d32:	7a 83       	std	Y+2, r23	; 0x02
     d34:	8b 83       	std	Y+3, r24	; 0x03
     d36:	9c 83       	std	Y+4, r25	; 0x04
     d38:	a5 01       	movw	r20, r10
     d3a:	60 e0       	ldi	r22, 0x00	; 0
     d3c:	70 e0       	ldi	r23, 0x00	; 0
     d3e:	80 91 88 02 	lds	r24, 0x0288	; 0x800288 <ac6>
     d42:	90 91 89 02 	lds	r25, 0x0289	; 0x800289 <ac6+0x1>
     d46:	9a 01       	movw	r18, r20
     d48:	ab 01       	movw	r20, r22
     d4a:	28 1b       	sub	r18, r24
     d4c:	39 0b       	sbc	r19, r25
     d4e:	41 09       	sbc	r20, r1
     d50:	51 09       	sbc	r21, r1
     d52:	a0 91 8a 02 	lds	r26, 0x028A	; 0x80028a <ac5>
     d56:	b0 91 8b 02 	lds	r27, 0x028B	; 0x80028b <ac5+0x1>
     d5a:	0e 94 b1 0a 	call	0x1562	; 0x1562 <__muluhisi3>
     d5e:	2b 01       	movw	r4, r22
     d60:	3c 01       	movw	r6, r24
     d62:	03 2e       	mov	r0, r19
     d64:	3f e0       	ldi	r19, 0x0F	; 15
     d66:	75 94       	asr	r7
     d68:	67 94       	ror	r6
     d6a:	57 94       	ror	r5
     d6c:	47 94       	ror	r4
     d6e:	3a 95       	dec	r19
     d70:	d1 f7       	brne	.-12     	; 0xd66 <readPressure+0x70>
     d72:	30 2d       	mov	r19, r0
     d74:	60 91 93 04 	lds	r22, 0x0493	; 0x800493 <mc>
     d78:	70 91 94 04 	lds	r23, 0x0494	; 0x800494 <mc+0x1>
     d7c:	cb 01       	movw	r24, r22
     d7e:	77 0f       	add	r23, r23
     d80:	aa 0b       	sbc	r26, r26
     d82:	bb 0b       	sbc	r27, r27
     d84:	bc 01       	movw	r22, r24
     d86:	cd 01       	movw	r24, r26
     d88:	05 2e       	mov	r0, r21
     d8a:	5b e0       	ldi	r21, 0x0B	; 11
     d8c:	66 0f       	add	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	88 1f       	adc	r24, r24
     d92:	99 1f       	adc	r25, r25
     d94:	5a 95       	dec	r21
     d96:	d1 f7       	brne	.-12     	; 0xd8c <readPressure+0x96>
     d98:	50 2d       	mov	r21, r0
     d9a:	20 91 8e 02 	lds	r18, 0x028E	; 0x80028e <md>
     d9e:	30 91 8f 02 	lds	r19, 0x028F	; 0x80028f <md+0x1>
     da2:	89 01       	movw	r16, r18
     da4:	33 0f       	add	r19, r19
     da6:	22 0b       	sbc	r18, r18
     da8:	33 0b       	sbc	r19, r19
     daa:	a9 01       	movw	r20, r18
     dac:	98 01       	movw	r18, r16
     dae:	24 0d       	add	r18, r4
     db0:	35 1d       	adc	r19, r5
     db2:	46 1d       	adc	r20, r6
     db4:	57 1d       	adc	r21, r7
     db6:	0e 94 83 0a 	call	0x1506	; 0x1506 <__divmodsi4>
     dba:	42 0e       	add	r4, r18
     dbc:	53 1e       	adc	r5, r19
     dbe:	64 1e       	adc	r6, r20
     dc0:	75 1e       	adc	r7, r21
     dc2:	20 ea       	ldi	r18, 0xA0	; 160
     dc4:	42 1a       	sub	r4, r18
     dc6:	2f e0       	ldi	r18, 0x0F	; 15
     dc8:	52 0a       	sbc	r5, r18
     dca:	61 08       	sbc	r6, r1
     dcc:	71 08       	sbc	r7, r1
     dce:	a3 01       	movw	r20, r6
     dd0:	92 01       	movw	r18, r4
     dd2:	c3 01       	movw	r24, r6
     dd4:	b2 01       	movw	r22, r4
     dd6:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__mulsi3>
     dda:	6b 01       	movw	r12, r22
     ddc:	7c 01       	movw	r14, r24
     dde:	0b 2e       	mov	r0, r27
     de0:	bc e0       	ldi	r27, 0x0C	; 12
     de2:	f5 94       	asr	r15
     de4:	e7 94       	ror	r14
     de6:	d7 94       	ror	r13
     de8:	c7 94       	ror	r12
     dea:	ba 95       	dec	r27
     dec:	d1 f7       	brne	.-12     	; 0xde2 <readPressure+0xec>
     dee:	b0 2d       	mov	r27, r0
     df0:	e0 91 92 02 	lds	r30, 0x0292	; 0x800292 <oversampling>
     df4:	a0 91 96 04 	lds	r26, 0x0496	; 0x800496 <ac3>
     df8:	b0 91 97 04 	lds	r27, 0x0497	; 0x800497 <ac3+0x1>
     dfc:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__mulshisi3>
     e00:	4b 01       	movw	r8, r22
     e02:	5c 01       	movw	r10, r24
     e04:	07 2e       	mov	r0, r23
     e06:	7d e0       	ldi	r23, 0x0D	; 13
     e08:	b5 94       	asr	r11
     e0a:	a7 94       	ror	r10
     e0c:	97 94       	ror	r9
     e0e:	87 94       	ror	r8
     e10:	7a 95       	dec	r23
     e12:	d1 f7       	brne	.-12     	; 0xe08 <readPressure+0x112>
     e14:	70 2d       	mov	r23, r0
     e16:	a0 91 86 02 	lds	r26, 0x0286	; 0x800286 <b1>
     e1a:	b0 91 87 02 	lds	r27, 0x0287	; 0x800287 <b1+0x1>
     e1e:	a7 01       	movw	r20, r14
     e20:	96 01       	movw	r18, r12
     e22:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__mulshisi3>
     e26:	bb 27       	eor	r27, r27
     e28:	97 fd       	sbrc	r25, 7
     e2a:	b0 95       	com	r27
     e2c:	ab 2f       	mov	r26, r27
     e2e:	88 0d       	add	r24, r8
     e30:	99 1d       	adc	r25, r9
     e32:	aa 1d       	adc	r26, r10
     e34:	bb 1d       	adc	r27, r11
     e36:	02 96       	adiw	r24, 0x02	; 2
     e38:	a1 1d       	adc	r26, r1
     e3a:	b1 1d       	adc	r27, r1
     e3c:	b5 95       	asr	r27
     e3e:	a7 95       	ror	r26
     e40:	97 95       	ror	r25
     e42:	87 95       	ror	r24
     e44:	b5 95       	asr	r27
     e46:	a7 95       	ror	r26
     e48:	97 95       	ror	r25
     e4a:	87 95       	ror	r24
     e4c:	9c 01       	movw	r18, r24
     e4e:	ad 01       	movw	r20, r26
     e50:	30 58       	subi	r19, 0x80	; 128
     e52:	4f 4f       	sbci	r20, 0xFF	; 255
     e54:	5f 4f       	sbci	r21, 0xFF	; 255
     e56:	a0 91 90 02 	lds	r26, 0x0290	; 0x800290 <ac4>
     e5a:	b0 91 91 02 	lds	r27, 0x0291	; 0x800291 <ac4+0x1>
     e5e:	0e 94 b1 0a 	call	0x1562	; 0x1562 <__muluhisi3>
     e62:	9b 01       	movw	r18, r22
     e64:	ac 01       	movw	r20, r24
     e66:	01 2e       	mov	r0, r17
     e68:	1f e0       	ldi	r17, 0x0F	; 15
     e6a:	56 95       	lsr	r21
     e6c:	47 95       	ror	r20
     e6e:	37 95       	ror	r19
     e70:	27 95       	ror	r18
     e72:	1a 95       	dec	r17
     e74:	d1 f7       	brne	.-12     	; 0xe6a <readPressure+0x174>
     e76:	10 2d       	mov	r17, r0
     e78:	2d 83       	std	Y+5, r18	; 0x05
     e7a:	3e 83       	std	Y+6, r19	; 0x06
     e7c:	4f 83       	std	Y+7, r20	; 0x07
     e7e:	58 87       	std	Y+8, r21	; 0x08
     e80:	a0 91 80 02 	lds	r26, 0x0280	; 0x800280 <b2>
     e84:	b0 91 81 02 	lds	r27, 0x0281	; 0x800281 <b2+0x1>
     e88:	a7 01       	movw	r20, r14
     e8a:	96 01       	movw	r18, r12
     e8c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__mulshisi3>
     e90:	4b 01       	movw	r8, r22
     e92:	5c 01       	movw	r10, r24
     e94:	07 2e       	mov	r0, r23
     e96:	7b e0       	ldi	r23, 0x0B	; 11
     e98:	b5 94       	asr	r11
     e9a:	a7 94       	ror	r10
     e9c:	97 94       	ror	r9
     e9e:	87 94       	ror	r8
     ea0:	7a 95       	dec	r23
     ea2:	d1 f7       	brne	.-12     	; 0xe98 <readPressure+0x1a2>
     ea4:	70 2d       	mov	r23, r0
     ea6:	a0 91 8c 02 	lds	r26, 0x028C	; 0x80028c <ac2>
     eaa:	b0 91 8d 02 	lds	r27, 0x028D	; 0x80028d <ac2+0x1>
     eae:	a3 01       	movw	r20, r6
     eb0:	92 01       	movw	r18, r4
     eb2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__mulshisi3>
     eb6:	dc 01       	movw	r26, r24
     eb8:	cb 01       	movw	r24, r22
     eba:	07 2e       	mov	r0, r23
     ebc:	7b e0       	ldi	r23, 0x0B	; 11
     ebe:	b5 95       	asr	r27
     ec0:	a7 95       	ror	r26
     ec2:	97 95       	ror	r25
     ec4:	87 95       	ror	r24
     ec6:	7a 95       	dec	r23
     ec8:	d1 f7       	brne	.-12     	; 0xebe <readPressure+0x1c8>
     eca:	70 2d       	mov	r23, r0
     ecc:	88 0d       	add	r24, r8
     ece:	99 1d       	adc	r25, r9
     ed0:	aa 1d       	adc	r26, r10
     ed2:	bb 1d       	adc	r27, r11
     ed4:	40 91 84 02 	lds	r20, 0x0284	; 0x800284 <ac1>
     ed8:	50 91 85 02 	lds	r21, 0x0285	; 0x800285 <ac1+0x1>
     edc:	05 2e       	mov	r0, r21
     ede:	00 0c       	add	r0, r0
     ee0:	66 0b       	sbc	r22, r22
     ee2:	77 0b       	sbc	r23, r23
     ee4:	44 0f       	add	r20, r20
     ee6:	55 1f       	adc	r21, r21
     ee8:	66 1f       	adc	r22, r22
     eea:	77 1f       	adc	r23, r23
     eec:	44 0f       	add	r20, r20
     eee:	55 1f       	adc	r21, r21
     ef0:	66 1f       	adc	r22, r22
     ef2:	77 1f       	adc	r23, r23
     ef4:	84 0f       	add	r24, r20
     ef6:	95 1f       	adc	r25, r21
     ef8:	a6 1f       	adc	r26, r22
     efa:	b7 1f       	adc	r27, r23
     efc:	0e 2e       	mov	r0, r30
     efe:	04 c0       	rjmp	.+8      	; 0xf08 <readPressure+0x212>
     f00:	88 0f       	add	r24, r24
     f02:	99 1f       	adc	r25, r25
     f04:	aa 1f       	adc	r26, r26
     f06:	bb 1f       	adc	r27, r27
     f08:	0a 94       	dec	r0
     f0a:	d2 f7       	brpl	.-12     	; 0xf00 <readPressure+0x20a>
     f0c:	02 96       	adiw	r24, 0x02	; 2
     f0e:	a1 1d       	adc	r26, r1
     f10:	b1 1d       	adc	r27, r1
     f12:	ac 01       	movw	r20, r24
     f14:	bd 01       	movw	r22, r26
     f16:	bb 23       	and	r27, r27
     f18:	24 f4       	brge	.+8      	; 0xf22 <readPressure+0x22c>
     f1a:	4d 5f       	subi	r20, 0xFD	; 253
     f1c:	5f 4f       	sbci	r21, 0xFF	; 255
     f1e:	6f 4f       	sbci	r22, 0xFF	; 255
     f20:	7f 4f       	sbci	r23, 0xFF	; 255
     f22:	75 95       	asr	r23
     f24:	67 95       	ror	r22
     f26:	57 95       	ror	r21
     f28:	47 95       	ror	r20
     f2a:	75 95       	asr	r23
     f2c:	67 95       	ror	r22
     f2e:	57 95       	ror	r21
     f30:	47 95       	ror	r20
     f32:	89 81       	ldd	r24, Y+1	; 0x01
     f34:	9a 81       	ldd	r25, Y+2	; 0x02
     f36:	ab 81       	ldd	r26, Y+3	; 0x03
     f38:	bc 81       	ldd	r27, Y+4	; 0x04
     f3a:	84 1b       	sub	r24, r20
     f3c:	95 0b       	sbc	r25, r21
     f3e:	a6 0b       	sbc	r26, r22
     f40:	b7 0b       	sbc	r27, r23
     f42:	9c 01       	movw	r18, r24
     f44:	ad 01       	movw	r20, r26
     f46:	80 e5       	ldi	r24, 0x50	; 80
     f48:	93 ec       	ldi	r25, 0xC3	; 195
     f4a:	a0 e0       	ldi	r26, 0x00	; 0
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	bc 01       	movw	r22, r24
     f50:	cd 01       	movw	r24, r26
     f52:	04 c0       	rjmp	.+8      	; 0xf5c <readPressure+0x266>
     f54:	96 95       	lsr	r25
     f56:	87 95       	ror	r24
     f58:	77 95       	ror	r23
     f5a:	67 95       	ror	r22
     f5c:	ea 95       	dec	r30
     f5e:	d2 f7       	brpl	.-12     	; 0xf54 <readPressure+0x25e>
     f60:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__mulsi3>
     f64:	99 23       	and	r25, r25
     f66:	6c f0       	brlt	.+26     	; 0xf82 <readPressure+0x28c>
     f68:	66 0f       	add	r22, r22
     f6a:	77 1f       	adc	r23, r23
     f6c:	88 1f       	adc	r24, r24
     f6e:	99 1f       	adc	r25, r25
     f70:	2d 81       	ldd	r18, Y+5	; 0x05
     f72:	3e 81       	ldd	r19, Y+6	; 0x06
     f74:	4f 81       	ldd	r20, Y+7	; 0x07
     f76:	58 85       	ldd	r21, Y+8	; 0x08
     f78:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <__udivmodsi4>
     f7c:	49 01       	movw	r8, r18
     f7e:	5a 01       	movw	r10, r20
     f80:	0c c0       	rjmp	.+24     	; 0xf9a <readPressure+0x2a4>
     f82:	2d 81       	ldd	r18, Y+5	; 0x05
     f84:	3e 81       	ldd	r19, Y+6	; 0x06
     f86:	4f 81       	ldd	r20, Y+7	; 0x07
     f88:	58 85       	ldd	r21, Y+8	; 0x08
     f8a:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <__udivmodsi4>
     f8e:	49 01       	movw	r8, r18
     f90:	5a 01       	movw	r10, r20
     f92:	88 0c       	add	r8, r8
     f94:	99 1c       	adc	r9, r9
     f96:	aa 1c       	adc	r10, r10
     f98:	bb 1c       	adc	r11, r11
     f9a:	99 27       	eor	r25, r25
     f9c:	b7 fc       	sbrc	r11, 7
     f9e:	9a 95       	dec	r25
     fa0:	8b 2d       	mov	r24, r11
     fa2:	7a 2d       	mov	r23, r10
     fa4:	69 2d       	mov	r22, r9
     fa6:	9b 01       	movw	r18, r22
     fa8:	ac 01       	movw	r20, r24
     faa:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__mulsi3>
     fae:	9b 01       	movw	r18, r22
     fb0:	ac 01       	movw	r20, r24
     fb2:	ae ed       	ldi	r26, 0xDE	; 222
     fb4:	bb e0       	ldi	r27, 0x0B	; 11
     fb6:	0e 94 b1 0a 	call	0x1562	; 0x1562 <__muluhisi3>
     fba:	6b 01       	movw	r12, r22
     fbc:	7c 01       	movw	r14, r24
     fbe:	a3 e4       	ldi	r26, 0x43	; 67
     fc0:	b3 ee       	ldi	r27, 0xE3	; 227
     fc2:	a5 01       	movw	r20, r10
     fc4:	94 01       	movw	r18, r8
     fc6:	0e 94 bf 0a 	call	0x157e	; 0x157e <__mulohisi3>
     fca:	bb 27       	eor	r27, r27
     fcc:	97 fd       	sbrc	r25, 7
     fce:	b0 95       	com	r27
     fd0:	ab 2f       	mov	r26, r27
     fd2:	67 01       	movw	r12, r14
     fd4:	ff 24       	eor	r15, r15
     fd6:	d7 fc       	sbrc	r13, 7
     fd8:	f0 94       	com	r15
     fda:	ef 2c       	mov	r14, r15
     fdc:	8c 0d       	add	r24, r12
     fde:	9d 1d       	adc	r25, r13
     fe0:	ae 1d       	adc	r26, r14
     fe2:	bf 1d       	adc	r27, r15
     fe4:	81 53       	subi	r24, 0x31	; 49
     fe6:	91 4f       	sbci	r25, 0xF1	; 241
     fe8:	af 4f       	sbci	r26, 0xFF	; 255
     fea:	bf 4f       	sbci	r27, 0xFF	; 255
     fec:	68 94       	set
     fee:	13 f8       	bld	r1, 3
     ff0:	b5 95       	asr	r27
     ff2:	a7 95       	ror	r26
     ff4:	97 95       	ror	r25
     ff6:	87 95       	ror	r24
     ff8:	16 94       	lsr	r1
     ffa:	d1 f7       	brne	.-12     	; 0xff0 <readPressure+0x2fa>
     ffc:	bc 01       	movw	r22, r24
     ffe:	cd 01       	movw	r24, r26
    1000:	68 0d       	add	r22, r8
    1002:	79 1d       	adc	r23, r9
    1004:	8a 1d       	adc	r24, r10
    1006:	9b 1d       	adc	r25, r11
    1008:	28 96       	adiw	r28, 0x08	; 8
    100a:	0f b6       	in	r0, 0x3f	; 63
    100c:	f8 94       	cli
    100e:	de bf       	out	0x3e, r29	; 62
    1010:	0f be       	out	0x3f, r0	; 63
    1012:	cd bf       	out	0x3d, r28	; 61
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	1f 91       	pop	r17
    101a:	0f 91       	pop	r16
    101c:	ff 90       	pop	r15
    101e:	ef 90       	pop	r14
    1020:	df 90       	pop	r13
    1022:	cf 90       	pop	r12
    1024:	bf 90       	pop	r11
    1026:	af 90       	pop	r10
    1028:	9f 90       	pop	r9
    102a:	8f 90       	pop	r8
    102c:	7f 90       	pop	r7
    102e:	6f 90       	pop	r6
    1030:	5f 90       	pop	r5
    1032:	4f 90       	pop	r4
    1034:	08 95       	ret

00001036 <main>:
uint8_t submask[4]={255,255,255,0};
char buffer[MAX_BUF];

uint16_t port=8080;

int main(void){
    1036:	cf 93       	push	r28
    1038:	df 93       	push	r29
    103a:	cd b7       	in	r28, 0x3d	; 61
    103c:	de b7       	in	r29, 0x3e	; 62
    103e:	2a 97       	sbiw	r28, 0x0a	; 10
    1040:	0f b6       	in	r0, 0x3f	; 63
    1042:	f8 94       	cli
    1044:	de bf       	out	0x3e, r29	; 62
    1046:	0f be       	out	0x3f, r0	; 63
    1048:	cd bf       	out	0x3d, r28	; 61
    serialStart();
    104a:	0e 94 b5 00 	call	0x16a	; 0x16a <serialStart>
    serialString("Serial Iniciada @ ");
    104e:	85 e5       	ldi	r24, 0x55	; 85
    1050:	91 e0       	ldi	r25, 0x01	; 1
    1052:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <serialString>
    serialSendInt(BAUD,DEC,1);
    1056:	21 e0       	ldi	r18, 0x01	; 1
    1058:	4a e0       	ldi	r20, 0x0A	; 10
    105a:	60 e8       	ldi	r22, 0x80	; 128
    105c:	75 e2       	ldi	r23, 0x25	; 37
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 ef 00 	call	0x1de	; 0x1de <serialSendInt>
	begin(ULTRAHIGHRES);
    1066:	83 e0       	ldi	r24, 0x03	; 3
    1068:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <begin>
    dhtStart();
    106c:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <dhtStart>
    if(dhtRead()){
    1070:	0e 94 db 03 	call	0x7b6	; 0x7b6 <dhtRead>
    1074:	88 23       	and	r24, r24
    1076:	09 f4       	brne	.+2      	; 0x107a <main+0x44>
    1078:	94 c0       	rjmp	.+296    	; 0x11a2 <main+0x16c>
        serialStringLN("DHT22 iniciado");
    107a:	88 e6       	ldi	r24, 0x68	; 104
    107c:	91 e0       	ldi	r25, 0x01	; 1
    107e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
        serialString("Temperatura: ");
    1082:	87 e7       	ldi	r24, 0x77	; 119
    1084:	91 e0       	ldi	r25, 0x01	; 1
    1086:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <serialString>
uint16_t humidity(){
	return HM;
}

uint16_t temperature(){
	return TP;
    108a:	20 91 7c 02 	lds	r18, 0x027C	; 0x80027c <__data_end>
    108e:	30 91 7d 02 	lds	r19, 0x027D	; 0x80027d <__data_end+0x1>
        serialSendInt(temperature()/10,DEC,0);
    1092:	ad ec       	ldi	r26, 0xCD	; 205
    1094:	bc ec       	ldi	r27, 0xCC	; 204
    1096:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__umulhisi3>
    109a:	96 95       	lsr	r25
    109c:	87 95       	ror	r24
    109e:	96 95       	lsr	r25
    10a0:	87 95       	ror	r24
    10a2:	96 95       	lsr	r25
    10a4:	87 95       	ror	r24
    10a6:	bc 01       	movw	r22, r24
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	20 e0       	ldi	r18, 0x00	; 0
    10ae:	4a e0       	ldi	r20, 0x0A	; 10
    10b0:	0e 94 ef 00 	call	0x1de	; 0x1de <serialSendInt>
        serialSend('.');
    10b4:	8e e2       	ldi	r24, 0x2E	; 46
    10b6:	0e 94 c8 00 	call	0x190	; 0x190 <serialSend>
    10ba:	40 91 7c 02 	lds	r20, 0x027C	; 0x80027c <__data_end>
    10be:	50 91 7d 02 	lds	r21, 0x027D	; 0x80027d <__data_end+0x1>
        serialSendInt(temperature()%10,DEC,0);
    10c2:	9a 01       	movw	r18, r20
    10c4:	ad ec       	ldi	r26, 0xCD	; 205
    10c6:	bc ec       	ldi	r27, 0xCC	; 204
    10c8:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__umulhisi3>
    10cc:	96 95       	lsr	r25
    10ce:	87 95       	ror	r24
    10d0:	96 95       	lsr	r25
    10d2:	87 95       	ror	r24
    10d4:	96 95       	lsr	r25
    10d6:	87 95       	ror	r24
    10d8:	9c 01       	movw	r18, r24
    10da:	22 0f       	add	r18, r18
    10dc:	33 1f       	adc	r19, r19
    10de:	88 0f       	add	r24, r24
    10e0:	99 1f       	adc	r25, r25
    10e2:	88 0f       	add	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	88 0f       	add	r24, r24
    10e8:	99 1f       	adc	r25, r25
    10ea:	82 0f       	add	r24, r18
    10ec:	93 1f       	adc	r25, r19
    10ee:	ba 01       	movw	r22, r20
    10f0:	68 1b       	sub	r22, r24
    10f2:	79 0b       	sbc	r23, r25
    10f4:	80 e0       	ldi	r24, 0x00	; 0
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	20 e0       	ldi	r18, 0x00	; 0
    10fa:	4a e0       	ldi	r20, 0x0A	; 10
    10fc:	0e 94 ef 00 	call	0x1de	; 0x1de <serialSendInt>
        serialStringLN("C");
    1100:	85 e8       	ldi	r24, 0x85	; 133
    1102:	91 e0       	ldi	r25, 0x01	; 1
    1104:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
        serialString("Umidade: ");
    1108:	87 e8       	ldi	r24, 0x87	; 135
    110a:	91 e0       	ldi	r25, 0x01	; 1
    110c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <serialString>
   return 1;
}


uint16_t humidity(){
	return HM;
    1110:	20 91 7e 02 	lds	r18, 0x027E	; 0x80027e <HM>
    1114:	30 91 7f 02 	lds	r19, 0x027F	; 0x80027f <HM+0x1>
        serialSendInt(humidity()/10,DEC,0);
    1118:	ad ec       	ldi	r26, 0xCD	; 205
    111a:	bc ec       	ldi	r27, 0xCC	; 204
    111c:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__umulhisi3>
    1120:	96 95       	lsr	r25
    1122:	87 95       	ror	r24
    1124:	96 95       	lsr	r25
    1126:	87 95       	ror	r24
    1128:	96 95       	lsr	r25
    112a:	87 95       	ror	r24
    112c:	bc 01       	movw	r22, r24
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	20 e0       	ldi	r18, 0x00	; 0
    1134:	4a e0       	ldi	r20, 0x0A	; 10
    1136:	0e 94 ef 00 	call	0x1de	; 0x1de <serialSendInt>
        serialSend('.');
    113a:	8e e2       	ldi	r24, 0x2E	; 46
    113c:	0e 94 c8 00 	call	0x190	; 0x190 <serialSend>
    1140:	40 91 7e 02 	lds	r20, 0x027E	; 0x80027e <HM>
    1144:	50 91 7f 02 	lds	r21, 0x027F	; 0x80027f <HM+0x1>
        serialSendInt(humidity()%10,DEC,0);
    1148:	9a 01       	movw	r18, r20
    114a:	ad ec       	ldi	r26, 0xCD	; 205
    114c:	bc ec       	ldi	r27, 0xCC	; 204
    114e:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__umulhisi3>
    1152:	96 95       	lsr	r25
    1154:	87 95       	ror	r24
    1156:	96 95       	lsr	r25
    1158:	87 95       	ror	r24
    115a:	96 95       	lsr	r25
    115c:	87 95       	ror	r24
    115e:	9c 01       	movw	r18, r24
    1160:	22 0f       	add	r18, r18
    1162:	33 1f       	adc	r19, r19
    1164:	88 0f       	add	r24, r24
    1166:	99 1f       	adc	r25, r25
    1168:	88 0f       	add	r24, r24
    116a:	99 1f       	adc	r25, r25
    116c:	88 0f       	add	r24, r24
    116e:	99 1f       	adc	r25, r25
    1170:	82 0f       	add	r24, r18
    1172:	93 1f       	adc	r25, r19
    1174:	ba 01       	movw	r22, r20
    1176:	68 1b       	sub	r22, r24
    1178:	79 0b       	sbc	r23, r25
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	4a e0       	ldi	r20, 0x0A	; 10
    1182:	0e 94 ef 00 	call	0x1de	; 0x1de <serialSendInt>
        serialStringLN("C");
    1186:	85 e8       	ldi	r24, 0x85	; 133
    1188:	91 e0       	ldi	r25, 0x01	; 1
    118a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    118e:	2f ef       	ldi	r18, 0xFF	; 255
    1190:	87 ea       	ldi	r24, 0xA7	; 167
    1192:	91 e6       	ldi	r25, 0x61	; 97
    1194:	21 50       	subi	r18, 0x01	; 1
    1196:	80 40       	sbci	r24, 0x00	; 0
    1198:	90 40       	sbci	r25, 0x00	; 0
    119a:	e1 f7       	brne	.-8      	; 0x1194 <main+0x15e>
    119c:	00 c0       	rjmp	.+0      	; 0x119e <main+0x168>
    119e:	00 00       	nop
    11a0:	04 c0       	rjmp	.+8      	; 0x11aa <main+0x174>
        _delay_ms(2000);
    }else{
        serialStringLN("ERRO NO DHT22");
    11a2:	81 e9       	ldi	r24, 0x91	; 145
    11a4:	91 e0       	ldi	r25, 0x01	; 1
    11a6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>

uint8_t static inline spiSend(uint8_t data); //Envia um byte de dado e retorna um byte seguindo o funcionamento do SPI


void static inline spiStart(uint8_t SPICLOCKPRESCALER){
    outputPin(DDR_SPI,SS);    //USAMOS O SS SEMPRE PARA EVITAR PROBLEMAS DE INCOMPATIBILIDADE
    11aa:	22 9a       	sbi	0x04, 2	; 4
    setPin(PORTB,SS);         //ATENÇÃO SE USAR SPI JAMAIS DEIXAR DE USAR O PINO SS PRINCIPALMENTE SE FOR USADO COMO ENTRADA
    11ac:	2a 9a       	sbi	0x05, 2	; 5
    outputPin(DDR_SPI,MOSI);  //MOSI SAIDA
    11ae:	23 9a       	sbi	0x04, 3	; 4
    outputPin(DDR_SPI,SCK);   //SCK SAIDA
    11b0:	25 9a       	sbi	0x04, 5	; 4
    setPin(SPCR,MSTR);        //MODO MASTER
    11b2:	8c b5       	in	r24, 0x2c	; 44
    11b4:	80 61       	ori	r24, 0x10	; 16
    11b6:	8c bd       	out	0x2c, r24	; 44
    SPCR|=SPICLOCKPRESCALER;  //SETA PRESCALER
    11b8:	8c b5       	in	r24, 0x2c	; 44
    11ba:	8c bd       	out	0x2c, r24	; 44
    setPin(SPCR,SPE);         //ATIVA SPI
    11bc:	8c b5       	in	r24, 0x2c	; 44
    11be:	80 64       	ori	r24, 0x40	; 64
    11c0:	8c bd       	out	0x2c, r24	; 44
    }

    spiStart(SPICLOCKPRESCALER4);
    serialStringLN("SPI iniciado");
    11c2:	8f e9       	ldi	r24, 0x9F	; 159
    11c4:	91 e0       	ldi	r25, 0x01	; 1
    11c6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>

    if(wiz5200Init(ip,mac,gtw,submask)){
    11ca:	22 e0       	ldi	r18, 0x02	; 2
    11cc:	31 e0       	ldi	r19, 0x01	; 1
    11ce:	4a e0       	ldi	r20, 0x0A	; 10
    11d0:	51 e0       	ldi	r21, 0x01	; 1
    11d2:	62 e1       	ldi	r22, 0x12	; 18
    11d4:	71 e0       	ldi	r23, 0x01	; 1
    11d6:	8e e0       	ldi	r24, 0x0E	; 14
    11d8:	91 e0       	ldi	r25, 0x01	; 1
    11da:	0e 94 8e 01 	call	0x31c	; 0x31c <wiz5200Init>
    11de:	88 23       	and	r24, r24
    11e0:	21 f0       	breq	.+8      	; 0x11ea <main+0x1b4>
        serialStringLN("WIZ5200 iniciado");
    11e2:	8c ea       	ldi	r24, 0xAC	; 172
    11e4:	91 e0       	ldi	r25, 0x01	; 1
    11e6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>

    for(;;){
        //port++;
        dhtRead();
        if(connect(server,SERVER_PORT,port)){
            strcat(buffer,"POST /API/dados/real/5a5f4f5980b416?valor=");
    11ea:	03 e9       	ldi	r16, 0x93	; 147
    11ec:	12 e0       	ldi	r17, 0x02	; 2
            char bufferTemp[10]="";
    11ee:	68 94       	set
    11f0:	55 24       	eor	r5, r5
    11f2:	53 f8       	bld	r5, 3
    11f4:	4e 01       	movw	r8, r28
    11f6:	e3 e0       	ldi	r30, 0x03	; 3
    11f8:	8e 0e       	add	r8, r30
    11fa:	91 1c       	adc	r9, r1
            sprintf(bufferTemp,"%d.%d",temperature()/10,temperature()%10);
    11fc:	0f 2e       	mov	r0, r31
    11fe:	f8 ee       	ldi	r31, 0xE8	; 232
    1200:	af 2e       	mov	r10, r31
    1202:	f1 e0       	ldi	r31, 0x01	; 1
    1204:	bf 2e       	mov	r11, r31
    1206:	f0 2d       	mov	r31, r0
    1208:	ce 01       	movw	r24, r28
    120a:	01 96       	adiw	r24, 0x01	; 1
    120c:	7c 01       	movw	r14, r24
            disconnect();
			
			connect(server,SERVER_PORT,port);
			strcat(buffer,"POST /API/dados/real/5a5f549861fea7?valor=");
			//char bufferTemp[10]="";
			sprintf(bufferTemp,"%ld",readPressure());
    120e:	0f 2e       	mov	r0, r31
    1210:	fa e2       	ldi	r31, 0x2A	; 42
    1212:	cf 2e       	mov	r12, r31
    1214:	f1 e0       	ldi	r31, 0x01	; 1
    1216:	df 2e       	mov	r13, r31
    1218:	f0 2d       	mov	r31, r0

    for(;;){
        //port++;
        dhtRead();
        if(connect(server,SERVER_PORT,port)){
            strcat(buffer,"POST /API/dados/real/5a5f4f5980b416?valor=");
    121a:	60 2e       	mov	r6, r16
    121c:	71 2e       	mov	r7, r17
            char bufferTemp[10]="";
            sprintf(bufferTemp,"%d.%d",temperature()/10,temperature()%10);
    121e:	48 2e       	mov	r4, r24
    1220:	3f 2c       	mov	r3, r15
    }


    for(;;){
        //port++;
        dhtRead();
    1222:	0e 94 db 03 	call	0x7b6	; 0x7b6 <dhtRead>
        if(connect(server,SERVER_PORT,port)){
    1226:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    122a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    122e:	60 e4       	ldi	r22, 0x40	; 64
    1230:	7f e1       	ldi	r23, 0x1F	; 31
    1232:	86 e0       	ldi	r24, 0x06	; 6
    1234:	91 e0       	ldi	r25, 0x01	; 1
    1236:	0e 94 48 03 	call	0x690	; 0x690 <connect>
    123a:	88 23       	and	r24, r24
    123c:	09 f4       	brne	.+2      	; 0x1240 <main+0x20a>
    123e:	13 c1       	rjmp	.+550    	; 0x1466 <main+0x430>
            strcat(buffer,"POST /API/dados/real/5a5f4f5980b416?valor=");
    1240:	d8 01       	movw	r26, r16
    1242:	0d 90       	ld	r0, X+
    1244:	00 20       	and	r0, r0
    1246:	e9 f7       	brne	.-6      	; 0x1242 <main+0x20c>
    1248:	11 97       	sbiw	r26, 0x01	; 1
    124a:	8b e2       	ldi	r24, 0x2B	; 43
    124c:	ed eb       	ldi	r30, 0xBD	; 189
    124e:	f1 e0       	ldi	r31, 0x01	; 1
    1250:	01 90       	ld	r0, Z+
    1252:	0d 92       	st	X+, r0
    1254:	8a 95       	dec	r24
    1256:	e1 f7       	brne	.-8      	; 0x1250 <main+0x21a>
            char bufferTemp[10]="";
    1258:	1a 82       	std	Y+2, r1	; 0x02
    125a:	19 82       	std	Y+1, r1	; 0x01
    125c:	f4 01       	movw	r30, r8
    125e:	25 2d       	mov	r18, r5
    1260:	11 92       	st	Z+, r1
    1262:	2a 95       	dec	r18
    1264:	e9 f7       	brne	.-6      	; 0x1260 <main+0x22a>
}

uint16_t temperature(){
	return TP;
    1266:	40 91 7c 02 	lds	r20, 0x027C	; 0x80027c <__data_end>
    126a:	50 91 7d 02 	lds	r21, 0x027D	; 0x80027d <__data_end+0x1>
    126e:	e0 91 7c 02 	lds	r30, 0x027C	; 0x80027c <__data_end>
    1272:	f0 91 7d 02 	lds	r31, 0x027D	; 0x80027d <__data_end+0x1>
            sprintf(bufferTemp,"%d.%d",temperature()/10,temperature()%10);
    1276:	9a 01       	movw	r18, r20
    1278:	ad ec       	ldi	r26, 0xCD	; 205
    127a:	bc ec       	ldi	r27, 0xCC	; 204
    127c:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__umulhisi3>
    1280:	96 95       	lsr	r25
    1282:	87 95       	ror	r24
    1284:	96 95       	lsr	r25
    1286:	87 95       	ror	r24
    1288:	96 95       	lsr	r25
    128a:	87 95       	ror	r24
    128c:	9c 01       	movw	r18, r24
    128e:	22 0f       	add	r18, r18
    1290:	33 1f       	adc	r19, r19
    1292:	88 0f       	add	r24, r24
    1294:	99 1f       	adc	r25, r25
    1296:	88 0f       	add	r24, r24
    1298:	99 1f       	adc	r25, r25
    129a:	88 0f       	add	r24, r24
    129c:	99 1f       	adc	r25, r25
    129e:	82 0f       	add	r24, r18
    12a0:	93 1f       	adc	r25, r19
    12a2:	48 1b       	sub	r20, r24
    12a4:	59 0b       	sbc	r21, r25
    12a6:	5f 93       	push	r21
    12a8:	4f 93       	push	r20
    12aa:	9f 01       	movw	r18, r30
    12ac:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__umulhisi3>
    12b0:	96 95       	lsr	r25
    12b2:	87 95       	ror	r24
    12b4:	96 95       	lsr	r25
    12b6:	87 95       	ror	r24
    12b8:	96 95       	lsr	r25
    12ba:	87 95       	ror	r24
    12bc:	9f 93       	push	r25
    12be:	8f 93       	push	r24
    12c0:	bf 92       	push	r11
    12c2:	af 92       	push	r10
    12c4:	ff 92       	push	r15
    12c6:	ef 92       	push	r14
    12c8:	0e 94 cf 0a 	call	0x159e	; 0x159e <sprintf>
            strcat(buffer,bufferTemp);
    12cc:	64 2d       	mov	r22, r4
    12ce:	73 2d       	mov	r23, r3
    12d0:	86 2d       	mov	r24, r6
    12d2:	97 2d       	mov	r25, r7
    12d4:	0e 94 c4 0a 	call	0x1588	; 0x1588 <strcat>
            strcat(buffer," HTTP/1.1\r\n");
    12d8:	d8 01       	movw	r26, r16
    12da:	0d 90       	ld	r0, X+
    12dc:	00 20       	and	r0, r0
    12de:	e9 f7       	brne	.-6      	; 0x12da <main+0x2a4>
    12e0:	11 97       	sbiw	r26, 0x01	; 1
    12e2:	8c e0       	ldi	r24, 0x0C	; 12
    12e4:	ee ee       	ldi	r30, 0xEE	; 238
    12e6:	f1 e0       	ldi	r31, 0x01	; 1
    12e8:	01 90       	ld	r0, Z+
    12ea:	0d 92       	st	X+, r0
    12ec:	8a 95       	dec	r24
    12ee:	e1 f7       	brne	.-8      	; 0x12e8 <main+0x2b2>
            strcat(buffer,"Host: 10.1.100.188\r\n");
    12f0:	d8 01       	movw	r26, r16
    12f2:	0d 90       	ld	r0, X+
    12f4:	00 20       	and	r0, r0
    12f6:	e9 f7       	brne	.-6      	; 0x12f2 <main+0x2bc>
    12f8:	11 97       	sbiw	r26, 0x01	; 1
    12fa:	85 e1       	ldi	r24, 0x15	; 21
    12fc:	ea ef       	ldi	r30, 0xFA	; 250
    12fe:	f1 e0       	ldi	r31, 0x01	; 1
    1300:	01 90       	ld	r0, Z+
    1302:	0d 92       	st	X+, r0
    1304:	8a 95       	dec	r24
    1306:	e1 f7       	brne	.-8      	; 0x1300 <main+0x2ca>
            strcat(buffer,"User-Agent: CentralSensores\r\n\r\n");
    1308:	d8 01       	movw	r26, r16
    130a:	0d 90       	ld	r0, X+
    130c:	00 20       	and	r0, r0
    130e:	e9 f7       	brne	.-6      	; 0x130a <main+0x2d4>
    1310:	11 97       	sbiw	r26, 0x01	; 1
    1312:	80 e2       	ldi	r24, 0x20	; 32
    1314:	ef e0       	ldi	r30, 0x0F	; 15
    1316:	f2 e0       	ldi	r31, 0x02	; 2
    1318:	01 90       	ld	r0, Z+
    131a:	0d 92       	st	X+, r0
    131c:	8a 95       	dec	r24
    131e:	e1 f7       	brne	.-8      	; 0x1318 <main+0x2e2>
            serialStringLN(buffer);
    1320:	86 2d       	mov	r24, r6
    1322:	97 2d       	mov	r25, r7
    1324:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
            send(buffer,strlen(buffer));
    1328:	f8 01       	movw	r30, r16
    132a:	01 90       	ld	r0, Z+
    132c:	00 20       	and	r0, r0
    132e:	e9 f7       	brne	.-6      	; 0x132a <main+0x2f4>
    1330:	31 97       	sbiw	r30, 0x01	; 1
    1332:	bf 01       	movw	r22, r30
    1334:	63 59       	subi	r22, 0x93	; 147
    1336:	72 40       	sbci	r23, 0x02	; 2
    1338:	86 2d       	mov	r24, r6
    133a:	97 2d       	mov	r25, r7
    133c:	0e 94 28 02 	call	0x450	; 0x450 <send>
            listen();
    1340:	0e 94 09 02 	call	0x412	; 0x412 <listen>
            while(receiveSize()<=0);
    1344:	0f b6       	in	r0, 0x3f	; 63
    1346:	f8 94       	cli
    1348:	de bf       	out	0x3e, r29	; 62
    134a:	0f be       	out	0x3f, r0	; 63
    134c:	cd bf       	out	0x3d, r28	; 61
    134e:	0e 94 34 03 	call	0x668	; 0x668 <receiveSize>
    1352:	89 2b       	or	r24, r25
    1354:	e1 f3       	breq	.-8      	; 0x134e <main+0x318>
            uint16_t size=receiveSize();
    1356:	0e 94 34 03 	call	0x668	; 0x668 <receiveSize>
            receive(buffer,size);
    135a:	bc 01       	movw	r22, r24
    135c:	86 2d       	mov	r24, r6
    135e:	97 2d       	mov	r25, r7
    1360:	0e 94 cf 02 	call	0x59e	; 0x59e <receive>
            //serialStringLN(buffer);
            serialStringLN("ok");
    1364:	8f e2       	ldi	r24, 0x2F	; 47
    1366:	92 e0       	ldi	r25, 0x02	; 2
    1368:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
            strcpy(buffer,"");
    136c:	f8 01       	movw	r30, r16
    136e:	10 82       	st	Z, r1
            strcpy(bufferTemp,"");
    1370:	19 82       	std	Y+1, r1	; 0x01
            disconnect();
    1372:	0e 94 fd 01 	call	0x3fa	; 0x3fa <disconnect>
			
			connect(server,SERVER_PORT,port);
    1376:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    137a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    137e:	60 e4       	ldi	r22, 0x40	; 64
    1380:	7f e1       	ldi	r23, 0x1F	; 31
    1382:	86 e0       	ldi	r24, 0x06	; 6
    1384:	91 e0       	ldi	r25, 0x01	; 1
    1386:	0e 94 48 03 	call	0x690	; 0x690 <connect>
			strcat(buffer,"POST /API/dados/real/5a5f549861fea7?valor=");
    138a:	d8 01       	movw	r26, r16
    138c:	0d 90       	ld	r0, X+
    138e:	00 20       	and	r0, r0
    1390:	e9 f7       	brne	.-6      	; 0x138c <main+0x356>
    1392:	11 97       	sbiw	r26, 0x01	; 1
    1394:	8b e2       	ldi	r24, 0x2B	; 43
    1396:	e2 e3       	ldi	r30, 0x32	; 50
    1398:	f2 e0       	ldi	r31, 0x02	; 2
    139a:	01 90       	ld	r0, Z+
    139c:	0d 92       	st	X+, r0
    139e:	8a 95       	dec	r24
    13a0:	e1 f7       	brne	.-8      	; 0x139a <main+0x364>
			//char bufferTemp[10]="";
			sprintf(bufferTemp,"%ld",readPressure());
    13a2:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <readPressure>
    13a6:	9f 93       	push	r25
    13a8:	8f 93       	push	r24
    13aa:	7f 93       	push	r23
    13ac:	6f 93       	push	r22
    13ae:	df 92       	push	r13
    13b0:	cf 92       	push	r12
    13b2:	ff 92       	push	r15
    13b4:	ef 92       	push	r14
    13b6:	0e 94 cf 0a 	call	0x159e	; 0x159e <sprintf>
			strcat(buffer,bufferTemp);
    13ba:	64 2d       	mov	r22, r4
    13bc:	73 2d       	mov	r23, r3
    13be:	86 2d       	mov	r24, r6
    13c0:	97 2d       	mov	r25, r7
    13c2:	0e 94 c4 0a 	call	0x1588	; 0x1588 <strcat>
			strcat(buffer," HTTP/1.1\r\n");
    13c6:	d8 01       	movw	r26, r16
    13c8:	0d 90       	ld	r0, X+
    13ca:	00 20       	and	r0, r0
    13cc:	e9 f7       	brne	.-6      	; 0x13c8 <main+0x392>
    13ce:	11 97       	sbiw	r26, 0x01	; 1
    13d0:	8c e0       	ldi	r24, 0x0C	; 12
    13d2:	ee ee       	ldi	r30, 0xEE	; 238
    13d4:	f1 e0       	ldi	r31, 0x01	; 1
    13d6:	01 90       	ld	r0, Z+
    13d8:	0d 92       	st	X+, r0
    13da:	8a 95       	dec	r24
    13dc:	e1 f7       	brne	.-8      	; 0x13d6 <main+0x3a0>
			strcat(buffer,"Host: 10.1.100.188\r\n");
    13de:	d8 01       	movw	r26, r16
    13e0:	0d 90       	ld	r0, X+
    13e2:	00 20       	and	r0, r0
    13e4:	e9 f7       	brne	.-6      	; 0x13e0 <main+0x3aa>
    13e6:	11 97       	sbiw	r26, 0x01	; 1
    13e8:	85 e1       	ldi	r24, 0x15	; 21
    13ea:	ea ef       	ldi	r30, 0xFA	; 250
    13ec:	f1 e0       	ldi	r31, 0x01	; 1
    13ee:	01 90       	ld	r0, Z+
    13f0:	0d 92       	st	X+, r0
    13f2:	8a 95       	dec	r24
    13f4:	e1 f7       	brne	.-8      	; 0x13ee <main+0x3b8>
			strcat(buffer,"User-Agent: CentralSensores\r\n\r\n");
    13f6:	d8 01       	movw	r26, r16
    13f8:	0d 90       	ld	r0, X+
    13fa:	00 20       	and	r0, r0
    13fc:	e9 f7       	brne	.-6      	; 0x13f8 <main+0x3c2>
    13fe:	11 97       	sbiw	r26, 0x01	; 1
    1400:	80 e2       	ldi	r24, 0x20	; 32
    1402:	ef e0       	ldi	r30, 0x0F	; 15
    1404:	f2 e0       	ldi	r31, 0x02	; 2
    1406:	01 90       	ld	r0, Z+
    1408:	0d 92       	st	X+, r0
    140a:	8a 95       	dec	r24
    140c:	e1 f7       	brne	.-8      	; 0x1406 <main+0x3d0>
			serialStringLN(buffer);
    140e:	86 2d       	mov	r24, r6
    1410:	97 2d       	mov	r25, r7
    1412:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
			send(buffer,strlen(buffer));
    1416:	f8 01       	movw	r30, r16
    1418:	01 90       	ld	r0, Z+
    141a:	00 20       	and	r0, r0
    141c:	e9 f7       	brne	.-6      	; 0x1418 <main+0x3e2>
    141e:	31 97       	sbiw	r30, 0x01	; 1
    1420:	bf 01       	movw	r22, r30
    1422:	63 59       	subi	r22, 0x93	; 147
    1424:	72 40       	sbci	r23, 0x02	; 2
    1426:	86 2d       	mov	r24, r6
    1428:	97 2d       	mov	r25, r7
    142a:	0e 94 28 02 	call	0x450	; 0x450 <send>
			listen();
    142e:	0e 94 09 02 	call	0x412	; 0x412 <listen>
			while(receiveSize()<=0);
    1432:	0f b6       	in	r0, 0x3f	; 63
    1434:	f8 94       	cli
    1436:	de bf       	out	0x3e, r29	; 62
    1438:	0f be       	out	0x3f, r0	; 63
    143a:	cd bf       	out	0x3d, r28	; 61
    143c:	0e 94 34 03 	call	0x668	; 0x668 <receiveSize>
    1440:	89 2b       	or	r24, r25
    1442:	e1 f3       	breq	.-8      	; 0x143c <main+0x406>
			size=receiveSize();
    1444:	0e 94 34 03 	call	0x668	; 0x668 <receiveSize>
			receive(buffer,size);
    1448:	bc 01       	movw	r22, r24
    144a:	86 2d       	mov	r24, r6
    144c:	97 2d       	mov	r25, r7
    144e:	0e 94 cf 02 	call	0x59e	; 0x59e <receive>
			//serialStringLN(buffer);
			serialStringLN("ok");
    1452:	8f e2       	ldi	r24, 0x2F	; 47
    1454:	92 e0       	ldi	r25, 0x02	; 2
    1456:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
			strcpy(buffer,"");
    145a:	f8 01       	movw	r30, r16
    145c:	10 82       	st	Z, r1
			strcpy(bufferTemp,"");
    145e:	19 82       	std	Y+1, r1	; 0x01
			disconnect();
    1460:	0e 94 fd 01 	call	0x3fa	; 0x3fa <disconnect>
    1464:	06 c0       	rjmp	.+12     	; 0x1472 <main+0x43c>
        }else{
            serialStringLN("Erro de conexão em execução");
    1466:	8d e5       	ldi	r24, 0x5D	; 93
    1468:	92 e0       	ldi	r25, 0x02	; 2
    146a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <serialStringLN>
            disconnect();
    146e:	0e 94 fd 01 	call	0x3fa	; 0x3fa <disconnect>
    1472:	ff ef       	ldi	r31, 0xFF	; 255
    1474:	23 e2       	ldi	r18, 0x23	; 35
    1476:	84 ef       	ldi	r24, 0xF4	; 244
    1478:	f1 50       	subi	r31, 0x01	; 1
    147a:	20 40       	sbci	r18, 0x00	; 0
    147c:	80 40       	sbci	r24, 0x00	; 0
    147e:	e1 f7       	brne	.-8      	; 0x1478 <main+0x442>
    1480:	00 c0       	rjmp	.+0      	; 0x1482 <main+0x44c>
    1482:	00 00       	nop

        }
        _delay_ms(5000);
        if(port>4000)
    1484:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1488:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    148c:	81 3a       	cpi	r24, 0xA1	; 161
    148e:	9f 40       	sbci	r25, 0x0F	; 15
    1490:	08 f4       	brcc	.+2      	; 0x1494 <main+0x45e>
    1492:	c7 ce       	rjmp	.-626    	; 0x1222 <main+0x1ec>
            port=100;
    1494:	84 e6       	ldi	r24, 0x64	; 100
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    149c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    14a0:	c0 ce       	rjmp	.-640    	; 0x1222 <main+0x1ec>

000014a2 <__mulsi3>:
    14a2:	db 01       	movw	r26, r22
    14a4:	8f 93       	push	r24
    14a6:	9f 93       	push	r25
    14a8:	0e 94 b1 0a 	call	0x1562	; 0x1562 <__muluhisi3>
    14ac:	bf 91       	pop	r27
    14ae:	af 91       	pop	r26
    14b0:	a2 9f       	mul	r26, r18
    14b2:	80 0d       	add	r24, r0
    14b4:	91 1d       	adc	r25, r1
    14b6:	a3 9f       	mul	r26, r19
    14b8:	90 0d       	add	r25, r0
    14ba:	b2 9f       	mul	r27, r18
    14bc:	90 0d       	add	r25, r0
    14be:	11 24       	eor	r1, r1
    14c0:	08 95       	ret

000014c2 <__udivmodsi4>:
    14c2:	a1 e2       	ldi	r26, 0x21	; 33
    14c4:	1a 2e       	mov	r1, r26
    14c6:	aa 1b       	sub	r26, r26
    14c8:	bb 1b       	sub	r27, r27
    14ca:	fd 01       	movw	r30, r26
    14cc:	0d c0       	rjmp	.+26     	; 0x14e8 <__udivmodsi4_ep>

000014ce <__udivmodsi4_loop>:
    14ce:	aa 1f       	adc	r26, r26
    14d0:	bb 1f       	adc	r27, r27
    14d2:	ee 1f       	adc	r30, r30
    14d4:	ff 1f       	adc	r31, r31
    14d6:	a2 17       	cp	r26, r18
    14d8:	b3 07       	cpc	r27, r19
    14da:	e4 07       	cpc	r30, r20
    14dc:	f5 07       	cpc	r31, r21
    14de:	20 f0       	brcs	.+8      	; 0x14e8 <__udivmodsi4_ep>
    14e0:	a2 1b       	sub	r26, r18
    14e2:	b3 0b       	sbc	r27, r19
    14e4:	e4 0b       	sbc	r30, r20
    14e6:	f5 0b       	sbc	r31, r21

000014e8 <__udivmodsi4_ep>:
    14e8:	66 1f       	adc	r22, r22
    14ea:	77 1f       	adc	r23, r23
    14ec:	88 1f       	adc	r24, r24
    14ee:	99 1f       	adc	r25, r25
    14f0:	1a 94       	dec	r1
    14f2:	69 f7       	brne	.-38     	; 0x14ce <__udivmodsi4_loop>
    14f4:	60 95       	com	r22
    14f6:	70 95       	com	r23
    14f8:	80 95       	com	r24
    14fa:	90 95       	com	r25
    14fc:	9b 01       	movw	r18, r22
    14fe:	ac 01       	movw	r20, r24
    1500:	bd 01       	movw	r22, r26
    1502:	cf 01       	movw	r24, r30
    1504:	08 95       	ret

00001506 <__divmodsi4>:
    1506:	05 2e       	mov	r0, r21
    1508:	97 fb       	bst	r25, 7
    150a:	1e f4       	brtc	.+6      	; 0x1512 <__divmodsi4+0xc>
    150c:	00 94       	com	r0
    150e:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__negsi2>
    1512:	57 fd       	sbrc	r21, 7
    1514:	07 d0       	rcall	.+14     	; 0x1524 <__divmodsi4_neg2>
    1516:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <__udivmodsi4>
    151a:	07 fc       	sbrc	r0, 7
    151c:	03 d0       	rcall	.+6      	; 0x1524 <__divmodsi4_neg2>
    151e:	4e f4       	brtc	.+18     	; 0x1532 <__divmodsi4_exit>
    1520:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__negsi2>

00001524 <__divmodsi4_neg2>:
    1524:	50 95       	com	r21
    1526:	40 95       	com	r20
    1528:	30 95       	com	r19
    152a:	21 95       	neg	r18
    152c:	3f 4f       	sbci	r19, 0xFF	; 255
    152e:	4f 4f       	sbci	r20, 0xFF	; 255
    1530:	5f 4f       	sbci	r21, 0xFF	; 255

00001532 <__divmodsi4_exit>:
    1532:	08 95       	ret

00001534 <__negsi2>:
    1534:	90 95       	com	r25
    1536:	80 95       	com	r24
    1538:	70 95       	com	r23
    153a:	61 95       	neg	r22
    153c:	7f 4f       	sbci	r23, 0xFF	; 255
    153e:	8f 4f       	sbci	r24, 0xFF	; 255
    1540:	9f 4f       	sbci	r25, 0xFF	; 255
    1542:	08 95       	ret

00001544 <__umulhisi3>:
    1544:	a2 9f       	mul	r26, r18
    1546:	b0 01       	movw	r22, r0
    1548:	b3 9f       	mul	r27, r19
    154a:	c0 01       	movw	r24, r0
    154c:	a3 9f       	mul	r26, r19
    154e:	70 0d       	add	r23, r0
    1550:	81 1d       	adc	r24, r1
    1552:	11 24       	eor	r1, r1
    1554:	91 1d       	adc	r25, r1
    1556:	b2 9f       	mul	r27, r18
    1558:	70 0d       	add	r23, r0
    155a:	81 1d       	adc	r24, r1
    155c:	11 24       	eor	r1, r1
    155e:	91 1d       	adc	r25, r1
    1560:	08 95       	ret

00001562 <__muluhisi3>:
    1562:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__umulhisi3>
    1566:	a5 9f       	mul	r26, r21
    1568:	90 0d       	add	r25, r0
    156a:	b4 9f       	mul	r27, r20
    156c:	90 0d       	add	r25, r0
    156e:	a4 9f       	mul	r26, r20
    1570:	80 0d       	add	r24, r0
    1572:	91 1d       	adc	r25, r1
    1574:	11 24       	eor	r1, r1
    1576:	08 95       	ret

00001578 <__mulshisi3>:
    1578:	b7 ff       	sbrs	r27, 7
    157a:	0c 94 b1 0a 	jmp	0x1562	; 0x1562 <__muluhisi3>

0000157e <__mulohisi3>:
    157e:	0e 94 b1 0a 	call	0x1562	; 0x1562 <__muluhisi3>
    1582:	82 1b       	sub	r24, r18
    1584:	93 0b       	sbc	r25, r19
    1586:	08 95       	ret

00001588 <strcat>:
    1588:	fb 01       	movw	r30, r22
    158a:	dc 01       	movw	r26, r24
    158c:	0d 90       	ld	r0, X+
    158e:	00 20       	and	r0, r0
    1590:	e9 f7       	brne	.-6      	; 0x158c <strcat+0x4>
    1592:	11 97       	sbiw	r26, 0x01	; 1
    1594:	01 90       	ld	r0, Z+
    1596:	0d 92       	st	X+, r0
    1598:	00 20       	and	r0, r0
    159a:	e1 f7       	brne	.-8      	; 0x1594 <strcat+0xc>
    159c:	08 95       	ret

0000159e <sprintf>:
    159e:	ae e0       	ldi	r26, 0x0E	; 14
    15a0:	b0 e0       	ldi	r27, 0x00	; 0
    15a2:	e5 ed       	ldi	r30, 0xD5	; 213
    15a4:	fa e0       	ldi	r31, 0x0A	; 10
    15a6:	0c 94 90 0d 	jmp	0x1b20	; 0x1b20 <__prologue_saves__+0x1c>
    15aa:	0d 89       	ldd	r16, Y+21	; 0x15
    15ac:	1e 89       	ldd	r17, Y+22	; 0x16
    15ae:	86 e0       	ldi	r24, 0x06	; 6
    15b0:	8c 83       	std	Y+4, r24	; 0x04
    15b2:	1a 83       	std	Y+2, r17	; 0x02
    15b4:	09 83       	std	Y+1, r16	; 0x01
    15b6:	8f ef       	ldi	r24, 0xFF	; 255
    15b8:	9f e7       	ldi	r25, 0x7F	; 127
    15ba:	9e 83       	std	Y+6, r25	; 0x06
    15bc:	8d 83       	std	Y+5, r24	; 0x05
    15be:	ae 01       	movw	r20, r28
    15c0:	47 5e       	subi	r20, 0xE7	; 231
    15c2:	5f 4f       	sbci	r21, 0xFF	; 255
    15c4:	6f 89       	ldd	r22, Y+23	; 0x17
    15c6:	78 8d       	ldd	r23, Y+24	; 0x18
    15c8:	ce 01       	movw	r24, r28
    15ca:	01 96       	adiw	r24, 0x01	; 1
    15cc:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <vfprintf>
    15d0:	ef 81       	ldd	r30, Y+7	; 0x07
    15d2:	f8 85       	ldd	r31, Y+8	; 0x08
    15d4:	e0 0f       	add	r30, r16
    15d6:	f1 1f       	adc	r31, r17
    15d8:	10 82       	st	Z, r1
    15da:	2e 96       	adiw	r28, 0x0e	; 14
    15dc:	e4 e0       	ldi	r30, 0x04	; 4
    15de:	0c 94 ac 0d 	jmp	0x1b58	; 0x1b58 <__epilogue_restores__+0x1c>

000015e2 <vfprintf>:
    15e2:	ab e0       	ldi	r26, 0x0B	; 11
    15e4:	b0 e0       	ldi	r27, 0x00	; 0
    15e6:	e7 ef       	ldi	r30, 0xF7	; 247
    15e8:	fa e0       	ldi	r31, 0x0A	; 10
    15ea:	0c 94 82 0d 	jmp	0x1b04	; 0x1b04 <__prologue_saves__>
    15ee:	6c 01       	movw	r12, r24
    15f0:	7b 01       	movw	r14, r22
    15f2:	8a 01       	movw	r16, r20
    15f4:	fc 01       	movw	r30, r24
    15f6:	17 82       	std	Z+7, r1	; 0x07
    15f8:	16 82       	std	Z+6, r1	; 0x06
    15fa:	83 81       	ldd	r24, Z+3	; 0x03
    15fc:	81 ff       	sbrs	r24, 1
    15fe:	cc c1       	rjmp	.+920    	; 0x1998 <vfprintf+0x3b6>
    1600:	ce 01       	movw	r24, r28
    1602:	01 96       	adiw	r24, 0x01	; 1
    1604:	3c 01       	movw	r6, r24
    1606:	f6 01       	movw	r30, r12
    1608:	93 81       	ldd	r25, Z+3	; 0x03
    160a:	f7 01       	movw	r30, r14
    160c:	93 fd       	sbrc	r25, 3
    160e:	85 91       	lpm	r24, Z+
    1610:	93 ff       	sbrs	r25, 3
    1612:	81 91       	ld	r24, Z+
    1614:	7f 01       	movw	r14, r30
    1616:	88 23       	and	r24, r24
    1618:	09 f4       	brne	.+2      	; 0x161c <vfprintf+0x3a>
    161a:	ba c1       	rjmp	.+884    	; 0x1990 <vfprintf+0x3ae>
    161c:	85 32       	cpi	r24, 0x25	; 37
    161e:	39 f4       	brne	.+14     	; 0x162e <vfprintf+0x4c>
    1620:	93 fd       	sbrc	r25, 3
    1622:	85 91       	lpm	r24, Z+
    1624:	93 ff       	sbrs	r25, 3
    1626:	81 91       	ld	r24, Z+
    1628:	7f 01       	movw	r14, r30
    162a:	85 32       	cpi	r24, 0x25	; 37
    162c:	29 f4       	brne	.+10     	; 0x1638 <vfprintf+0x56>
    162e:	b6 01       	movw	r22, r12
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    1636:	e7 cf       	rjmp	.-50     	; 0x1606 <vfprintf+0x24>
    1638:	91 2c       	mov	r9, r1
    163a:	21 2c       	mov	r2, r1
    163c:	31 2c       	mov	r3, r1
    163e:	ff e1       	ldi	r31, 0x1F	; 31
    1640:	f3 15       	cp	r31, r3
    1642:	d8 f0       	brcs	.+54     	; 0x167a <vfprintf+0x98>
    1644:	8b 32       	cpi	r24, 0x2B	; 43
    1646:	79 f0       	breq	.+30     	; 0x1666 <vfprintf+0x84>
    1648:	38 f4       	brcc	.+14     	; 0x1658 <vfprintf+0x76>
    164a:	80 32       	cpi	r24, 0x20	; 32
    164c:	79 f0       	breq	.+30     	; 0x166c <vfprintf+0x8a>
    164e:	83 32       	cpi	r24, 0x23	; 35
    1650:	a1 f4       	brne	.+40     	; 0x167a <vfprintf+0x98>
    1652:	23 2d       	mov	r18, r3
    1654:	20 61       	ori	r18, 0x10	; 16
    1656:	1d c0       	rjmp	.+58     	; 0x1692 <vfprintf+0xb0>
    1658:	8d 32       	cpi	r24, 0x2D	; 45
    165a:	61 f0       	breq	.+24     	; 0x1674 <vfprintf+0x92>
    165c:	80 33       	cpi	r24, 0x30	; 48
    165e:	69 f4       	brne	.+26     	; 0x167a <vfprintf+0x98>
    1660:	23 2d       	mov	r18, r3
    1662:	21 60       	ori	r18, 0x01	; 1
    1664:	16 c0       	rjmp	.+44     	; 0x1692 <vfprintf+0xb0>
    1666:	83 2d       	mov	r24, r3
    1668:	82 60       	ori	r24, 0x02	; 2
    166a:	38 2e       	mov	r3, r24
    166c:	e3 2d       	mov	r30, r3
    166e:	e4 60       	ori	r30, 0x04	; 4
    1670:	3e 2e       	mov	r3, r30
    1672:	2a c0       	rjmp	.+84     	; 0x16c8 <vfprintf+0xe6>
    1674:	f3 2d       	mov	r31, r3
    1676:	f8 60       	ori	r31, 0x08	; 8
    1678:	1d c0       	rjmp	.+58     	; 0x16b4 <vfprintf+0xd2>
    167a:	37 fc       	sbrc	r3, 7
    167c:	2d c0       	rjmp	.+90     	; 0x16d8 <vfprintf+0xf6>
    167e:	20 ed       	ldi	r18, 0xD0	; 208
    1680:	28 0f       	add	r18, r24
    1682:	2a 30       	cpi	r18, 0x0A	; 10
    1684:	40 f0       	brcs	.+16     	; 0x1696 <vfprintf+0xb4>
    1686:	8e 32       	cpi	r24, 0x2E	; 46
    1688:	b9 f4       	brne	.+46     	; 0x16b8 <vfprintf+0xd6>
    168a:	36 fc       	sbrc	r3, 6
    168c:	81 c1       	rjmp	.+770    	; 0x1990 <vfprintf+0x3ae>
    168e:	23 2d       	mov	r18, r3
    1690:	20 64       	ori	r18, 0x40	; 64
    1692:	32 2e       	mov	r3, r18
    1694:	19 c0       	rjmp	.+50     	; 0x16c8 <vfprintf+0xe6>
    1696:	36 fe       	sbrs	r3, 6
    1698:	06 c0       	rjmp	.+12     	; 0x16a6 <vfprintf+0xc4>
    169a:	8a e0       	ldi	r24, 0x0A	; 10
    169c:	98 9e       	mul	r9, r24
    169e:	20 0d       	add	r18, r0
    16a0:	11 24       	eor	r1, r1
    16a2:	92 2e       	mov	r9, r18
    16a4:	11 c0       	rjmp	.+34     	; 0x16c8 <vfprintf+0xe6>
    16a6:	ea e0       	ldi	r30, 0x0A	; 10
    16a8:	2e 9e       	mul	r2, r30
    16aa:	20 0d       	add	r18, r0
    16ac:	11 24       	eor	r1, r1
    16ae:	22 2e       	mov	r2, r18
    16b0:	f3 2d       	mov	r31, r3
    16b2:	f0 62       	ori	r31, 0x20	; 32
    16b4:	3f 2e       	mov	r3, r31
    16b6:	08 c0       	rjmp	.+16     	; 0x16c8 <vfprintf+0xe6>
    16b8:	8c 36       	cpi	r24, 0x6C	; 108
    16ba:	21 f4       	brne	.+8      	; 0x16c4 <vfprintf+0xe2>
    16bc:	83 2d       	mov	r24, r3
    16be:	80 68       	ori	r24, 0x80	; 128
    16c0:	38 2e       	mov	r3, r24
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <vfprintf+0xe6>
    16c4:	88 36       	cpi	r24, 0x68	; 104
    16c6:	41 f4       	brne	.+16     	; 0x16d8 <vfprintf+0xf6>
    16c8:	f7 01       	movw	r30, r14
    16ca:	93 fd       	sbrc	r25, 3
    16cc:	85 91       	lpm	r24, Z+
    16ce:	93 ff       	sbrs	r25, 3
    16d0:	81 91       	ld	r24, Z+
    16d2:	7f 01       	movw	r14, r30
    16d4:	81 11       	cpse	r24, r1
    16d6:	b3 cf       	rjmp	.-154    	; 0x163e <vfprintf+0x5c>
    16d8:	98 2f       	mov	r25, r24
    16da:	9f 7d       	andi	r25, 0xDF	; 223
    16dc:	95 54       	subi	r25, 0x45	; 69
    16de:	93 30       	cpi	r25, 0x03	; 3
    16e0:	28 f4       	brcc	.+10     	; 0x16ec <vfprintf+0x10a>
    16e2:	0c 5f       	subi	r16, 0xFC	; 252
    16e4:	1f 4f       	sbci	r17, 0xFF	; 255
    16e6:	9f e3       	ldi	r25, 0x3F	; 63
    16e8:	99 83       	std	Y+1, r25	; 0x01
    16ea:	0d c0       	rjmp	.+26     	; 0x1706 <vfprintf+0x124>
    16ec:	83 36       	cpi	r24, 0x63	; 99
    16ee:	31 f0       	breq	.+12     	; 0x16fc <vfprintf+0x11a>
    16f0:	83 37       	cpi	r24, 0x73	; 115
    16f2:	71 f0       	breq	.+28     	; 0x1710 <vfprintf+0x12e>
    16f4:	83 35       	cpi	r24, 0x53	; 83
    16f6:	09 f0       	breq	.+2      	; 0x16fa <vfprintf+0x118>
    16f8:	59 c0       	rjmp	.+178    	; 0x17ac <vfprintf+0x1ca>
    16fa:	21 c0       	rjmp	.+66     	; 0x173e <vfprintf+0x15c>
    16fc:	f8 01       	movw	r30, r16
    16fe:	80 81       	ld	r24, Z
    1700:	89 83       	std	Y+1, r24	; 0x01
    1702:	0e 5f       	subi	r16, 0xFE	; 254
    1704:	1f 4f       	sbci	r17, 0xFF	; 255
    1706:	88 24       	eor	r8, r8
    1708:	83 94       	inc	r8
    170a:	91 2c       	mov	r9, r1
    170c:	53 01       	movw	r10, r6
    170e:	13 c0       	rjmp	.+38     	; 0x1736 <vfprintf+0x154>
    1710:	28 01       	movw	r4, r16
    1712:	f2 e0       	ldi	r31, 0x02	; 2
    1714:	4f 0e       	add	r4, r31
    1716:	51 1c       	adc	r5, r1
    1718:	f8 01       	movw	r30, r16
    171a:	a0 80       	ld	r10, Z
    171c:	b1 80       	ldd	r11, Z+1	; 0x01
    171e:	36 fe       	sbrs	r3, 6
    1720:	03 c0       	rjmp	.+6      	; 0x1728 <vfprintf+0x146>
    1722:	69 2d       	mov	r22, r9
    1724:	70 e0       	ldi	r23, 0x00	; 0
    1726:	02 c0       	rjmp	.+4      	; 0x172c <vfprintf+0x14a>
    1728:	6f ef       	ldi	r22, 0xFF	; 255
    172a:	7f ef       	ldi	r23, 0xFF	; 255
    172c:	c5 01       	movw	r24, r10
    172e:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <strnlen>
    1732:	4c 01       	movw	r8, r24
    1734:	82 01       	movw	r16, r4
    1736:	f3 2d       	mov	r31, r3
    1738:	ff 77       	andi	r31, 0x7F	; 127
    173a:	3f 2e       	mov	r3, r31
    173c:	16 c0       	rjmp	.+44     	; 0x176a <vfprintf+0x188>
    173e:	28 01       	movw	r4, r16
    1740:	22 e0       	ldi	r18, 0x02	; 2
    1742:	42 0e       	add	r4, r18
    1744:	51 1c       	adc	r5, r1
    1746:	f8 01       	movw	r30, r16
    1748:	a0 80       	ld	r10, Z
    174a:	b1 80       	ldd	r11, Z+1	; 0x01
    174c:	36 fe       	sbrs	r3, 6
    174e:	03 c0       	rjmp	.+6      	; 0x1756 <vfprintf+0x174>
    1750:	69 2d       	mov	r22, r9
    1752:	70 e0       	ldi	r23, 0x00	; 0
    1754:	02 c0       	rjmp	.+4      	; 0x175a <vfprintf+0x178>
    1756:	6f ef       	ldi	r22, 0xFF	; 255
    1758:	7f ef       	ldi	r23, 0xFF	; 255
    175a:	c5 01       	movw	r24, r10
    175c:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <strnlen_P>
    1760:	4c 01       	movw	r8, r24
    1762:	f3 2d       	mov	r31, r3
    1764:	f0 68       	ori	r31, 0x80	; 128
    1766:	3f 2e       	mov	r3, r31
    1768:	82 01       	movw	r16, r4
    176a:	33 fc       	sbrc	r3, 3
    176c:	1b c0       	rjmp	.+54     	; 0x17a4 <vfprintf+0x1c2>
    176e:	82 2d       	mov	r24, r2
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	88 16       	cp	r8, r24
    1774:	99 06       	cpc	r9, r25
    1776:	b0 f4       	brcc	.+44     	; 0x17a4 <vfprintf+0x1c2>
    1778:	b6 01       	movw	r22, r12
    177a:	80 e2       	ldi	r24, 0x20	; 32
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    1782:	2a 94       	dec	r2
    1784:	f4 cf       	rjmp	.-24     	; 0x176e <vfprintf+0x18c>
    1786:	f5 01       	movw	r30, r10
    1788:	37 fc       	sbrc	r3, 7
    178a:	85 91       	lpm	r24, Z+
    178c:	37 fe       	sbrs	r3, 7
    178e:	81 91       	ld	r24, Z+
    1790:	5f 01       	movw	r10, r30
    1792:	b6 01       	movw	r22, r12
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    179a:	21 10       	cpse	r2, r1
    179c:	2a 94       	dec	r2
    179e:	21 e0       	ldi	r18, 0x01	; 1
    17a0:	82 1a       	sub	r8, r18
    17a2:	91 08       	sbc	r9, r1
    17a4:	81 14       	cp	r8, r1
    17a6:	91 04       	cpc	r9, r1
    17a8:	71 f7       	brne	.-36     	; 0x1786 <vfprintf+0x1a4>
    17aa:	e8 c0       	rjmp	.+464    	; 0x197c <vfprintf+0x39a>
    17ac:	84 36       	cpi	r24, 0x64	; 100
    17ae:	11 f0       	breq	.+4      	; 0x17b4 <vfprintf+0x1d2>
    17b0:	89 36       	cpi	r24, 0x69	; 105
    17b2:	41 f5       	brne	.+80     	; 0x1804 <vfprintf+0x222>
    17b4:	f8 01       	movw	r30, r16
    17b6:	37 fe       	sbrs	r3, 7
    17b8:	07 c0       	rjmp	.+14     	; 0x17c8 <vfprintf+0x1e6>
    17ba:	60 81       	ld	r22, Z
    17bc:	71 81       	ldd	r23, Z+1	; 0x01
    17be:	82 81       	ldd	r24, Z+2	; 0x02
    17c0:	93 81       	ldd	r25, Z+3	; 0x03
    17c2:	0c 5f       	subi	r16, 0xFC	; 252
    17c4:	1f 4f       	sbci	r17, 0xFF	; 255
    17c6:	08 c0       	rjmp	.+16     	; 0x17d8 <vfprintf+0x1f6>
    17c8:	60 81       	ld	r22, Z
    17ca:	71 81       	ldd	r23, Z+1	; 0x01
    17cc:	07 2e       	mov	r0, r23
    17ce:	00 0c       	add	r0, r0
    17d0:	88 0b       	sbc	r24, r24
    17d2:	99 0b       	sbc	r25, r25
    17d4:	0e 5f       	subi	r16, 0xFE	; 254
    17d6:	1f 4f       	sbci	r17, 0xFF	; 255
    17d8:	f3 2d       	mov	r31, r3
    17da:	ff 76       	andi	r31, 0x6F	; 111
    17dc:	3f 2e       	mov	r3, r31
    17de:	97 ff       	sbrs	r25, 7
    17e0:	09 c0       	rjmp	.+18     	; 0x17f4 <vfprintf+0x212>
    17e2:	90 95       	com	r25
    17e4:	80 95       	com	r24
    17e6:	70 95       	com	r23
    17e8:	61 95       	neg	r22
    17ea:	7f 4f       	sbci	r23, 0xFF	; 255
    17ec:	8f 4f       	sbci	r24, 0xFF	; 255
    17ee:	9f 4f       	sbci	r25, 0xFF	; 255
    17f0:	f0 68       	ori	r31, 0x80	; 128
    17f2:	3f 2e       	mov	r3, r31
    17f4:	2a e0       	ldi	r18, 0x0A	; 10
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	a3 01       	movw	r20, r6
    17fa:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__ultoa_invert>
    17fe:	88 2e       	mov	r8, r24
    1800:	86 18       	sub	r8, r6
    1802:	45 c0       	rjmp	.+138    	; 0x188e <vfprintf+0x2ac>
    1804:	85 37       	cpi	r24, 0x75	; 117
    1806:	31 f4       	brne	.+12     	; 0x1814 <vfprintf+0x232>
    1808:	23 2d       	mov	r18, r3
    180a:	2f 7e       	andi	r18, 0xEF	; 239
    180c:	b2 2e       	mov	r11, r18
    180e:	2a e0       	ldi	r18, 0x0A	; 10
    1810:	30 e0       	ldi	r19, 0x00	; 0
    1812:	25 c0       	rjmp	.+74     	; 0x185e <vfprintf+0x27c>
    1814:	93 2d       	mov	r25, r3
    1816:	99 7f       	andi	r25, 0xF9	; 249
    1818:	b9 2e       	mov	r11, r25
    181a:	8f 36       	cpi	r24, 0x6F	; 111
    181c:	c1 f0       	breq	.+48     	; 0x184e <vfprintf+0x26c>
    181e:	18 f4       	brcc	.+6      	; 0x1826 <vfprintf+0x244>
    1820:	88 35       	cpi	r24, 0x58	; 88
    1822:	79 f0       	breq	.+30     	; 0x1842 <vfprintf+0x260>
    1824:	b5 c0       	rjmp	.+362    	; 0x1990 <vfprintf+0x3ae>
    1826:	80 37       	cpi	r24, 0x70	; 112
    1828:	19 f0       	breq	.+6      	; 0x1830 <vfprintf+0x24e>
    182a:	88 37       	cpi	r24, 0x78	; 120
    182c:	21 f0       	breq	.+8      	; 0x1836 <vfprintf+0x254>
    182e:	b0 c0       	rjmp	.+352    	; 0x1990 <vfprintf+0x3ae>
    1830:	e9 2f       	mov	r30, r25
    1832:	e0 61       	ori	r30, 0x10	; 16
    1834:	be 2e       	mov	r11, r30
    1836:	b4 fe       	sbrs	r11, 4
    1838:	0d c0       	rjmp	.+26     	; 0x1854 <vfprintf+0x272>
    183a:	fb 2d       	mov	r31, r11
    183c:	f4 60       	ori	r31, 0x04	; 4
    183e:	bf 2e       	mov	r11, r31
    1840:	09 c0       	rjmp	.+18     	; 0x1854 <vfprintf+0x272>
    1842:	34 fe       	sbrs	r3, 4
    1844:	0a c0       	rjmp	.+20     	; 0x185a <vfprintf+0x278>
    1846:	29 2f       	mov	r18, r25
    1848:	26 60       	ori	r18, 0x06	; 6
    184a:	b2 2e       	mov	r11, r18
    184c:	06 c0       	rjmp	.+12     	; 0x185a <vfprintf+0x278>
    184e:	28 e0       	ldi	r18, 0x08	; 8
    1850:	30 e0       	ldi	r19, 0x00	; 0
    1852:	05 c0       	rjmp	.+10     	; 0x185e <vfprintf+0x27c>
    1854:	20 e1       	ldi	r18, 0x10	; 16
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	02 c0       	rjmp	.+4      	; 0x185e <vfprintf+0x27c>
    185a:	20 e1       	ldi	r18, 0x10	; 16
    185c:	32 e0       	ldi	r19, 0x02	; 2
    185e:	f8 01       	movw	r30, r16
    1860:	b7 fe       	sbrs	r11, 7
    1862:	07 c0       	rjmp	.+14     	; 0x1872 <vfprintf+0x290>
    1864:	60 81       	ld	r22, Z
    1866:	71 81       	ldd	r23, Z+1	; 0x01
    1868:	82 81       	ldd	r24, Z+2	; 0x02
    186a:	93 81       	ldd	r25, Z+3	; 0x03
    186c:	0c 5f       	subi	r16, 0xFC	; 252
    186e:	1f 4f       	sbci	r17, 0xFF	; 255
    1870:	06 c0       	rjmp	.+12     	; 0x187e <vfprintf+0x29c>
    1872:	60 81       	ld	r22, Z
    1874:	71 81       	ldd	r23, Z+1	; 0x01
    1876:	80 e0       	ldi	r24, 0x00	; 0
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	0e 5f       	subi	r16, 0xFE	; 254
    187c:	1f 4f       	sbci	r17, 0xFF	; 255
    187e:	a3 01       	movw	r20, r6
    1880:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__ultoa_invert>
    1884:	88 2e       	mov	r8, r24
    1886:	86 18       	sub	r8, r6
    1888:	fb 2d       	mov	r31, r11
    188a:	ff 77       	andi	r31, 0x7F	; 127
    188c:	3f 2e       	mov	r3, r31
    188e:	36 fe       	sbrs	r3, 6
    1890:	0d c0       	rjmp	.+26     	; 0x18ac <vfprintf+0x2ca>
    1892:	23 2d       	mov	r18, r3
    1894:	2e 7f       	andi	r18, 0xFE	; 254
    1896:	a2 2e       	mov	r10, r18
    1898:	89 14       	cp	r8, r9
    189a:	58 f4       	brcc	.+22     	; 0x18b2 <vfprintf+0x2d0>
    189c:	34 fe       	sbrs	r3, 4
    189e:	0b c0       	rjmp	.+22     	; 0x18b6 <vfprintf+0x2d4>
    18a0:	32 fc       	sbrc	r3, 2
    18a2:	09 c0       	rjmp	.+18     	; 0x18b6 <vfprintf+0x2d4>
    18a4:	83 2d       	mov	r24, r3
    18a6:	8e 7e       	andi	r24, 0xEE	; 238
    18a8:	a8 2e       	mov	r10, r24
    18aa:	05 c0       	rjmp	.+10     	; 0x18b6 <vfprintf+0x2d4>
    18ac:	b8 2c       	mov	r11, r8
    18ae:	a3 2c       	mov	r10, r3
    18b0:	03 c0       	rjmp	.+6      	; 0x18b8 <vfprintf+0x2d6>
    18b2:	b8 2c       	mov	r11, r8
    18b4:	01 c0       	rjmp	.+2      	; 0x18b8 <vfprintf+0x2d6>
    18b6:	b9 2c       	mov	r11, r9
    18b8:	a4 fe       	sbrs	r10, 4
    18ba:	0f c0       	rjmp	.+30     	; 0x18da <vfprintf+0x2f8>
    18bc:	fe 01       	movw	r30, r28
    18be:	e8 0d       	add	r30, r8
    18c0:	f1 1d       	adc	r31, r1
    18c2:	80 81       	ld	r24, Z
    18c4:	80 33       	cpi	r24, 0x30	; 48
    18c6:	21 f4       	brne	.+8      	; 0x18d0 <vfprintf+0x2ee>
    18c8:	9a 2d       	mov	r25, r10
    18ca:	99 7e       	andi	r25, 0xE9	; 233
    18cc:	a9 2e       	mov	r10, r25
    18ce:	09 c0       	rjmp	.+18     	; 0x18e2 <vfprintf+0x300>
    18d0:	a2 fe       	sbrs	r10, 2
    18d2:	06 c0       	rjmp	.+12     	; 0x18e0 <vfprintf+0x2fe>
    18d4:	b3 94       	inc	r11
    18d6:	b3 94       	inc	r11
    18d8:	04 c0       	rjmp	.+8      	; 0x18e2 <vfprintf+0x300>
    18da:	8a 2d       	mov	r24, r10
    18dc:	86 78       	andi	r24, 0x86	; 134
    18de:	09 f0       	breq	.+2      	; 0x18e2 <vfprintf+0x300>
    18e0:	b3 94       	inc	r11
    18e2:	a3 fc       	sbrc	r10, 3
    18e4:	11 c0       	rjmp	.+34     	; 0x1908 <vfprintf+0x326>
    18e6:	a0 fe       	sbrs	r10, 0
    18e8:	06 c0       	rjmp	.+12     	; 0x18f6 <vfprintf+0x314>
    18ea:	b2 14       	cp	r11, r2
    18ec:	88 f4       	brcc	.+34     	; 0x1910 <vfprintf+0x32e>
    18ee:	28 0c       	add	r2, r8
    18f0:	92 2c       	mov	r9, r2
    18f2:	9b 18       	sub	r9, r11
    18f4:	0e c0       	rjmp	.+28     	; 0x1912 <vfprintf+0x330>
    18f6:	b2 14       	cp	r11, r2
    18f8:	60 f4       	brcc	.+24     	; 0x1912 <vfprintf+0x330>
    18fa:	b6 01       	movw	r22, r12
    18fc:	80 e2       	ldi	r24, 0x20	; 32
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    1904:	b3 94       	inc	r11
    1906:	f7 cf       	rjmp	.-18     	; 0x18f6 <vfprintf+0x314>
    1908:	b2 14       	cp	r11, r2
    190a:	18 f4       	brcc	.+6      	; 0x1912 <vfprintf+0x330>
    190c:	2b 18       	sub	r2, r11
    190e:	02 c0       	rjmp	.+4      	; 0x1914 <vfprintf+0x332>
    1910:	98 2c       	mov	r9, r8
    1912:	21 2c       	mov	r2, r1
    1914:	a4 fe       	sbrs	r10, 4
    1916:	10 c0       	rjmp	.+32     	; 0x1938 <vfprintf+0x356>
    1918:	b6 01       	movw	r22, r12
    191a:	80 e3       	ldi	r24, 0x30	; 48
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    1922:	a2 fe       	sbrs	r10, 2
    1924:	17 c0       	rjmp	.+46     	; 0x1954 <vfprintf+0x372>
    1926:	a1 fc       	sbrc	r10, 1
    1928:	03 c0       	rjmp	.+6      	; 0x1930 <vfprintf+0x34e>
    192a:	88 e7       	ldi	r24, 0x78	; 120
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	02 c0       	rjmp	.+4      	; 0x1934 <vfprintf+0x352>
    1930:	88 e5       	ldi	r24, 0x58	; 88
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	b6 01       	movw	r22, r12
    1936:	0c c0       	rjmp	.+24     	; 0x1950 <vfprintf+0x36e>
    1938:	8a 2d       	mov	r24, r10
    193a:	86 78       	andi	r24, 0x86	; 134
    193c:	59 f0       	breq	.+22     	; 0x1954 <vfprintf+0x372>
    193e:	a1 fe       	sbrs	r10, 1
    1940:	02 c0       	rjmp	.+4      	; 0x1946 <vfprintf+0x364>
    1942:	8b e2       	ldi	r24, 0x2B	; 43
    1944:	01 c0       	rjmp	.+2      	; 0x1948 <vfprintf+0x366>
    1946:	80 e2       	ldi	r24, 0x20	; 32
    1948:	a7 fc       	sbrc	r10, 7
    194a:	8d e2       	ldi	r24, 0x2D	; 45
    194c:	b6 01       	movw	r22, r12
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    1954:	89 14       	cp	r8, r9
    1956:	38 f4       	brcc	.+14     	; 0x1966 <vfprintf+0x384>
    1958:	b6 01       	movw	r22, r12
    195a:	80 e3       	ldi	r24, 0x30	; 48
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    1962:	9a 94       	dec	r9
    1964:	f7 cf       	rjmp	.-18     	; 0x1954 <vfprintf+0x372>
    1966:	8a 94       	dec	r8
    1968:	f3 01       	movw	r30, r6
    196a:	e8 0d       	add	r30, r8
    196c:	f1 1d       	adc	r31, r1
    196e:	80 81       	ld	r24, Z
    1970:	b6 01       	movw	r22, r12
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    1978:	81 10       	cpse	r8, r1
    197a:	f5 cf       	rjmp	.-22     	; 0x1966 <vfprintf+0x384>
    197c:	22 20       	and	r2, r2
    197e:	09 f4       	brne	.+2      	; 0x1982 <vfprintf+0x3a0>
    1980:	42 ce       	rjmp	.-892    	; 0x1606 <vfprintf+0x24>
    1982:	b6 01       	movw	r22, r12
    1984:	80 e2       	ldi	r24, 0x20	; 32
    1986:	90 e0       	ldi	r25, 0x00	; 0
    1988:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <fputc>
    198c:	2a 94       	dec	r2
    198e:	f6 cf       	rjmp	.-20     	; 0x197c <vfprintf+0x39a>
    1990:	f6 01       	movw	r30, r12
    1992:	86 81       	ldd	r24, Z+6	; 0x06
    1994:	97 81       	ldd	r25, Z+7	; 0x07
    1996:	02 c0       	rjmp	.+4      	; 0x199c <vfprintf+0x3ba>
    1998:	8f ef       	ldi	r24, 0xFF	; 255
    199a:	9f ef       	ldi	r25, 0xFF	; 255
    199c:	2b 96       	adiw	r28, 0x0b	; 11
    199e:	e2 e1       	ldi	r30, 0x12	; 18
    19a0:	0c 94 9e 0d 	jmp	0x1b3c	; 0x1b3c <__epilogue_restores__>

000019a4 <strnlen_P>:
    19a4:	fc 01       	movw	r30, r24
    19a6:	05 90       	lpm	r0, Z+
    19a8:	61 50       	subi	r22, 0x01	; 1
    19aa:	70 40       	sbci	r23, 0x00	; 0
    19ac:	01 10       	cpse	r0, r1
    19ae:	d8 f7       	brcc	.-10     	; 0x19a6 <strnlen_P+0x2>
    19b0:	80 95       	com	r24
    19b2:	90 95       	com	r25
    19b4:	8e 0f       	add	r24, r30
    19b6:	9f 1f       	adc	r25, r31
    19b8:	08 95       	ret

000019ba <strnlen>:
    19ba:	fc 01       	movw	r30, r24
    19bc:	61 50       	subi	r22, 0x01	; 1
    19be:	70 40       	sbci	r23, 0x00	; 0
    19c0:	01 90       	ld	r0, Z+
    19c2:	01 10       	cpse	r0, r1
    19c4:	d8 f7       	brcc	.-10     	; 0x19bc <strnlen+0x2>
    19c6:	80 95       	com	r24
    19c8:	90 95       	com	r25
    19ca:	8e 0f       	add	r24, r30
    19cc:	9f 1f       	adc	r25, r31
    19ce:	08 95       	ret

000019d0 <fputc>:
    19d0:	0f 93       	push	r16
    19d2:	1f 93       	push	r17
    19d4:	cf 93       	push	r28
    19d6:	df 93       	push	r29
    19d8:	fb 01       	movw	r30, r22
    19da:	23 81       	ldd	r18, Z+3	; 0x03
    19dc:	21 fd       	sbrc	r18, 1
    19de:	03 c0       	rjmp	.+6      	; 0x19e6 <fputc+0x16>
    19e0:	8f ef       	ldi	r24, 0xFF	; 255
    19e2:	9f ef       	ldi	r25, 0xFF	; 255
    19e4:	2c c0       	rjmp	.+88     	; 0x1a3e <fputc+0x6e>
    19e6:	22 ff       	sbrs	r18, 2
    19e8:	16 c0       	rjmp	.+44     	; 0x1a16 <fputc+0x46>
    19ea:	46 81       	ldd	r20, Z+6	; 0x06
    19ec:	57 81       	ldd	r21, Z+7	; 0x07
    19ee:	24 81       	ldd	r18, Z+4	; 0x04
    19f0:	35 81       	ldd	r19, Z+5	; 0x05
    19f2:	42 17       	cp	r20, r18
    19f4:	53 07       	cpc	r21, r19
    19f6:	44 f4       	brge	.+16     	; 0x1a08 <fputc+0x38>
    19f8:	a0 81       	ld	r26, Z
    19fa:	b1 81       	ldd	r27, Z+1	; 0x01
    19fc:	9d 01       	movw	r18, r26
    19fe:	2f 5f       	subi	r18, 0xFF	; 255
    1a00:	3f 4f       	sbci	r19, 0xFF	; 255
    1a02:	31 83       	std	Z+1, r19	; 0x01
    1a04:	20 83       	st	Z, r18
    1a06:	8c 93       	st	X, r24
    1a08:	26 81       	ldd	r18, Z+6	; 0x06
    1a0a:	37 81       	ldd	r19, Z+7	; 0x07
    1a0c:	2f 5f       	subi	r18, 0xFF	; 255
    1a0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a10:	37 83       	std	Z+7, r19	; 0x07
    1a12:	26 83       	std	Z+6, r18	; 0x06
    1a14:	14 c0       	rjmp	.+40     	; 0x1a3e <fputc+0x6e>
    1a16:	8b 01       	movw	r16, r22
    1a18:	ec 01       	movw	r28, r24
    1a1a:	fb 01       	movw	r30, r22
    1a1c:	00 84       	ldd	r0, Z+8	; 0x08
    1a1e:	f1 85       	ldd	r31, Z+9	; 0x09
    1a20:	e0 2d       	mov	r30, r0
    1a22:	09 95       	icall
    1a24:	89 2b       	or	r24, r25
    1a26:	e1 f6       	brne	.-72     	; 0x19e0 <fputc+0x10>
    1a28:	d8 01       	movw	r26, r16
    1a2a:	16 96       	adiw	r26, 0x06	; 6
    1a2c:	8d 91       	ld	r24, X+
    1a2e:	9c 91       	ld	r25, X
    1a30:	17 97       	sbiw	r26, 0x07	; 7
    1a32:	01 96       	adiw	r24, 0x01	; 1
    1a34:	17 96       	adiw	r26, 0x07	; 7
    1a36:	9c 93       	st	X, r25
    1a38:	8e 93       	st	-X, r24
    1a3a:	16 97       	sbiw	r26, 0x06	; 6
    1a3c:	ce 01       	movw	r24, r28
    1a3e:	df 91       	pop	r29
    1a40:	cf 91       	pop	r28
    1a42:	1f 91       	pop	r17
    1a44:	0f 91       	pop	r16
    1a46:	08 95       	ret

00001a48 <__ultoa_invert>:
    1a48:	fa 01       	movw	r30, r20
    1a4a:	aa 27       	eor	r26, r26
    1a4c:	28 30       	cpi	r18, 0x08	; 8
    1a4e:	51 f1       	breq	.+84     	; 0x1aa4 <__ultoa_invert+0x5c>
    1a50:	20 31       	cpi	r18, 0x10	; 16
    1a52:	81 f1       	breq	.+96     	; 0x1ab4 <__ultoa_invert+0x6c>
    1a54:	e8 94       	clt
    1a56:	6f 93       	push	r22
    1a58:	6e 7f       	andi	r22, 0xFE	; 254
    1a5a:	6e 5f       	subi	r22, 0xFE	; 254
    1a5c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a5e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a60:	9f 4f       	sbci	r25, 0xFF	; 255
    1a62:	af 4f       	sbci	r26, 0xFF	; 255
    1a64:	b1 e0       	ldi	r27, 0x01	; 1
    1a66:	3e d0       	rcall	.+124    	; 0x1ae4 <__ultoa_invert+0x9c>
    1a68:	b4 e0       	ldi	r27, 0x04	; 4
    1a6a:	3c d0       	rcall	.+120    	; 0x1ae4 <__ultoa_invert+0x9c>
    1a6c:	67 0f       	add	r22, r23
    1a6e:	78 1f       	adc	r23, r24
    1a70:	89 1f       	adc	r24, r25
    1a72:	9a 1f       	adc	r25, r26
    1a74:	a1 1d       	adc	r26, r1
    1a76:	68 0f       	add	r22, r24
    1a78:	79 1f       	adc	r23, r25
    1a7a:	8a 1f       	adc	r24, r26
    1a7c:	91 1d       	adc	r25, r1
    1a7e:	a1 1d       	adc	r26, r1
    1a80:	6a 0f       	add	r22, r26
    1a82:	71 1d       	adc	r23, r1
    1a84:	81 1d       	adc	r24, r1
    1a86:	91 1d       	adc	r25, r1
    1a88:	a1 1d       	adc	r26, r1
    1a8a:	20 d0       	rcall	.+64     	; 0x1acc <__ultoa_invert+0x84>
    1a8c:	09 f4       	brne	.+2      	; 0x1a90 <__ultoa_invert+0x48>
    1a8e:	68 94       	set
    1a90:	3f 91       	pop	r19
    1a92:	2a e0       	ldi	r18, 0x0A	; 10
    1a94:	26 9f       	mul	r18, r22
    1a96:	11 24       	eor	r1, r1
    1a98:	30 19       	sub	r19, r0
    1a9a:	30 5d       	subi	r19, 0xD0	; 208
    1a9c:	31 93       	st	Z+, r19
    1a9e:	de f6       	brtc	.-74     	; 0x1a56 <__ultoa_invert+0xe>
    1aa0:	cf 01       	movw	r24, r30
    1aa2:	08 95       	ret
    1aa4:	46 2f       	mov	r20, r22
    1aa6:	47 70       	andi	r20, 0x07	; 7
    1aa8:	40 5d       	subi	r20, 0xD0	; 208
    1aaa:	41 93       	st	Z+, r20
    1aac:	b3 e0       	ldi	r27, 0x03	; 3
    1aae:	0f d0       	rcall	.+30     	; 0x1ace <__ultoa_invert+0x86>
    1ab0:	c9 f7       	brne	.-14     	; 0x1aa4 <__ultoa_invert+0x5c>
    1ab2:	f6 cf       	rjmp	.-20     	; 0x1aa0 <__ultoa_invert+0x58>
    1ab4:	46 2f       	mov	r20, r22
    1ab6:	4f 70       	andi	r20, 0x0F	; 15
    1ab8:	40 5d       	subi	r20, 0xD0	; 208
    1aba:	4a 33       	cpi	r20, 0x3A	; 58
    1abc:	18 f0       	brcs	.+6      	; 0x1ac4 <__ultoa_invert+0x7c>
    1abe:	49 5d       	subi	r20, 0xD9	; 217
    1ac0:	31 fd       	sbrc	r19, 1
    1ac2:	40 52       	subi	r20, 0x20	; 32
    1ac4:	41 93       	st	Z+, r20
    1ac6:	02 d0       	rcall	.+4      	; 0x1acc <__ultoa_invert+0x84>
    1ac8:	a9 f7       	brne	.-22     	; 0x1ab4 <__ultoa_invert+0x6c>
    1aca:	ea cf       	rjmp	.-44     	; 0x1aa0 <__ultoa_invert+0x58>
    1acc:	b4 e0       	ldi	r27, 0x04	; 4
    1ace:	a6 95       	lsr	r26
    1ad0:	97 95       	ror	r25
    1ad2:	87 95       	ror	r24
    1ad4:	77 95       	ror	r23
    1ad6:	67 95       	ror	r22
    1ad8:	ba 95       	dec	r27
    1ada:	c9 f7       	brne	.-14     	; 0x1ace <__ultoa_invert+0x86>
    1adc:	00 97       	sbiw	r24, 0x00	; 0
    1ade:	61 05       	cpc	r22, r1
    1ae0:	71 05       	cpc	r23, r1
    1ae2:	08 95       	ret
    1ae4:	9b 01       	movw	r18, r22
    1ae6:	ac 01       	movw	r20, r24
    1ae8:	0a 2e       	mov	r0, r26
    1aea:	06 94       	lsr	r0
    1aec:	57 95       	ror	r21
    1aee:	47 95       	ror	r20
    1af0:	37 95       	ror	r19
    1af2:	27 95       	ror	r18
    1af4:	ba 95       	dec	r27
    1af6:	c9 f7       	brne	.-14     	; 0x1aea <__ultoa_invert+0xa2>
    1af8:	62 0f       	add	r22, r18
    1afa:	73 1f       	adc	r23, r19
    1afc:	84 1f       	adc	r24, r20
    1afe:	95 1f       	adc	r25, r21
    1b00:	a0 1d       	adc	r26, r0
    1b02:	08 95       	ret

00001b04 <__prologue_saves__>:
    1b04:	2f 92       	push	r2
    1b06:	3f 92       	push	r3
    1b08:	4f 92       	push	r4
    1b0a:	5f 92       	push	r5
    1b0c:	6f 92       	push	r6
    1b0e:	7f 92       	push	r7
    1b10:	8f 92       	push	r8
    1b12:	9f 92       	push	r9
    1b14:	af 92       	push	r10
    1b16:	bf 92       	push	r11
    1b18:	cf 92       	push	r12
    1b1a:	df 92       	push	r13
    1b1c:	ef 92       	push	r14
    1b1e:	ff 92       	push	r15
    1b20:	0f 93       	push	r16
    1b22:	1f 93       	push	r17
    1b24:	cf 93       	push	r28
    1b26:	df 93       	push	r29
    1b28:	cd b7       	in	r28, 0x3d	; 61
    1b2a:	de b7       	in	r29, 0x3e	; 62
    1b2c:	ca 1b       	sub	r28, r26
    1b2e:	db 0b       	sbc	r29, r27
    1b30:	0f b6       	in	r0, 0x3f	; 63
    1b32:	f8 94       	cli
    1b34:	de bf       	out	0x3e, r29	; 62
    1b36:	0f be       	out	0x3f, r0	; 63
    1b38:	cd bf       	out	0x3d, r28	; 61
    1b3a:	09 94       	ijmp

00001b3c <__epilogue_restores__>:
    1b3c:	2a 88       	ldd	r2, Y+18	; 0x12
    1b3e:	39 88       	ldd	r3, Y+17	; 0x11
    1b40:	48 88       	ldd	r4, Y+16	; 0x10
    1b42:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b44:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b46:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b48:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b4a:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b4c:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b4e:	b9 84       	ldd	r11, Y+9	; 0x09
    1b50:	c8 84       	ldd	r12, Y+8	; 0x08
    1b52:	df 80       	ldd	r13, Y+7	; 0x07
    1b54:	ee 80       	ldd	r14, Y+6	; 0x06
    1b56:	fd 80       	ldd	r15, Y+5	; 0x05
    1b58:	0c 81       	ldd	r16, Y+4	; 0x04
    1b5a:	1b 81       	ldd	r17, Y+3	; 0x03
    1b5c:	aa 81       	ldd	r26, Y+2	; 0x02
    1b5e:	b9 81       	ldd	r27, Y+1	; 0x01
    1b60:	ce 0f       	add	r28, r30
    1b62:	d1 1d       	adc	r29, r1
    1b64:	0f b6       	in	r0, 0x3f	; 63
    1b66:	f8 94       	cli
    1b68:	de bf       	out	0x3e, r29	; 62
    1b6a:	0f be       	out	0x3f, r0	; 63
    1b6c:	cd bf       	out	0x3d, r28	; 61
    1b6e:	ed 01       	movw	r28, r26
    1b70:	08 95       	ret

00001b72 <_exit>:
    1b72:	f8 94       	cli

00001b74 <__stop_program>:
    1b74:	ff cf       	rjmp	.-2      	; 0x1b74 <__stop_program>
